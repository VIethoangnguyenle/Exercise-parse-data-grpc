// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: read_data.proto

package com.example.proto;

public final class ReadData {
  private ReadData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StockInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:StockInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
     * </pre>
     *
     * <code>string sender_comp_id = 1;</code>
     * @return The senderCompId.
     */
    java.lang.String getSenderCompId();
    /**
     * <pre>
     *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
     * </pre>
     *
     * <code>string sender_comp_id = 1;</code>
     * @return The bytes for senderCompId.
     */
    com.google.protobuf.ByteString
        getSenderCompIdBytes();

    /**
     * <pre>
     *Mã chứng khoán
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    java.lang.String getSymbol();
    /**
     * <pre>
     *Mã chứng khoán
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    com.google.protobuf.ByteString
        getSymbolBytes();

    /**
     * <pre>
     *Id chứng khoán
     * </pre>
     *
     * <code>double symbol_id = 3;</code>
     * @return The symbolId.
     */
    double getSymbolId();

    /**
     * <pre>
     *Mã bảng của chứng khoán
     * </pre>
     *
     * <code>string board_code = 4;</code>
     * @return The boardCode.
     */
    java.lang.String getBoardCode();
    /**
     * <pre>
     *Mã bảng của chứng khoán
     * </pre>
     *
     * <code>string board_code = 4;</code>
     * @return The bytes for boardCode.
     */
    com.google.protobuf.ByteString
        getBoardCodeBytes();

    /**
     * <pre>
     *Mã trạng thái giao dịch
     * </pre>
     *
     * <code>string trading_session_id = 5;</code>
     * @return The tradingSessionId.
     */
    java.lang.String getTradingSessionId();
    /**
     * <pre>
     *Mã trạng thái giao dịch
     * </pre>
     *
     * <code>string trading_session_id = 5;</code>
     * @return The bytes for tradingSessionId.
     */
    com.google.protobuf.ByteString
        getTradingSessionIdBytes();

    /**
     * <pre>
     *Trạng thái giao dịch:
     *= 0 Chưa bắt đầu.
     *= 1 Bình thường
     *= 2 Tạm dừng
     *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
     *= 4 Tạm dừng do Circuit Break
     *= 5 Phiên định kỳ sau Circuit Break
     *= 6 Chứng khoán đang Prolong
     *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
     *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
     *= 97 Đóng cửa thị trường.
     * </pre>
     *
     * <code>string trad_ses_status = 6;</code>
     * @return The tradSesStatus.
     */
    java.lang.String getTradSesStatus();
    /**
     * <pre>
     *Trạng thái giao dịch:
     *= 0 Chưa bắt đầu.
     *= 1 Bình thường
     *= 2 Tạm dừng
     *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
     *= 4 Tạm dừng do Circuit Break
     *= 5 Phiên định kỳ sau Circuit Break
     *= 6 Chứng khoán đang Prolong
     *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
     *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
     *= 97 Đóng cửa thị trường.
     * </pre>
     *
     * <code>string trad_ses_status = 6;</code>
     * @return The bytes for tradSesStatus.
     */
    com.google.protobuf.ByteString
        getTradSesStatusBytes();

    /**
     * <pre>
     *Trạng thái chứng khoán:
     *= 0: Bình thường
     *= 1: Chứng khoán không được giao dịch trong ngày
     *= 2: Ngừng giao dịch
     *= 6: Hủy niêm yết
     *= 7: Niêm yết mới
     *= 8: Sắp hủy niêm yết
     *=10: Tạm ngừng giao dịch giữa phiên
     *= 25: Giao dịch đặc biệt
     * </pre>
     *
     * <code>int32 security_trading_status = 7;</code>
     * @return The securityTradingStatus.
     */
    int getSecurityTradingStatus();

    /**
     * <pre>
     *Tình trạng chứng khoán
     *=0: Bình thường
     *=2: Bị cảnh báo
     *=3: Bị kiểm soát
     * </pre>
     *
     * <code>int32 listing_status = 8;</code>
     * @return The listingStatus.
     */
    int getListingStatus();

    /**
     * <pre>
     *Loại chứng khoán:
     *ST: Cổ phiếu
     *BO: Trái phiếu
     *MF: Chứng chỉ quỹ
     *EF: ETF
     *FU : Future
     *OP: Option
     * </pre>
     *
     * <code>string security_type = 9;</code>
     * @return The securityType.
     */
    java.lang.String getSecurityType();
    /**
     * <pre>
     *Loại chứng khoán:
     *ST: Cổ phiếu
     *BO: Trái phiếu
     *MF: Chứng chỉ quỹ
     *EF: ETF
     *FU : Future
     *OP: Option
     * </pre>
     *
     * <code>string security_type = 9;</code>
     * @return The bytes for securityType.
     */
    com.google.protobuf.ByteString
        getSecurityTypeBytes();

    /**
     * <pre>
     *Ngày phát hành theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string issue_date = 10;</code>
     * @return The issueDate.
     */
    java.lang.String getIssueDate();
    /**
     * <pre>
     *Ngày phát hành theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string issue_date = 10;</code>
     * @return The bytes for issueDate.
     */
    com.google.protobuf.ByteString
        getIssueDateBytes();

    /**
     * <pre>
     *Tổ chức phát hành
     * </pre>
     *
     * <code>string issuer = 11;</code>
     * @return The issuer.
     */
    java.lang.String getIssuer();
    /**
     * <pre>
     *Tổ chức phát hành
     * </pre>
     *
     * <code>string issuer = 11;</code>
     * @return The bytes for issuer.
     */
    com.google.protobuf.ByteString
        getIssuerBytes();

    /**
     * <pre>
     *Mô tả thêm về chứng khoán
     * </pre>
     *
     * <code>string security_desc = 12;</code>
     * @return The securityDesc.
     */
    java.lang.String getSecurityDesc();
    /**
     * <pre>
     *Mô tả thêm về chứng khoán
     * </pre>
     *
     * <code>string security_desc = 12;</code>
     * @return The bytes for securityDesc.
     */
    com.google.protobuf.ByteString
        getSecurityDescBytes();

    /**
     * <pre>
     *Giá đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_bid_price = 13;</code>
     * @return The bestBidPrice.
     */
    int getBestBidPrice();

    /**
     * <pre>
     *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_bid_qtty = 14;</code>
     * @return The bestBidQtty.
     */
    int getBestBidQtty();

    /**
     * <pre>
     *Giá đặt bán tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_offer_price = 15;</code>
     * @return The bestOfferPrice.
     */
    int getBestOfferPrice();

    /**
     * <pre>
     *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_offer_qtty = 16;</code>
     * @return The bestOfferQtty.
     */
    int getBestOfferQtty();

    /**
     * <pre>
     *Tổng KL đặt mua của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
     * </pre>
     *
     * <code>double total_bid_qtty = 17;</code>
     * @return The totalBidQtty.
     */
    double getTotalBidQtty();

    /**
     * <pre>
     *Tổng KL đặt bán của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
     * </pre>
     *
     * <code>double total_offer_qtty = 18;</code>
     * @return The totalOfferQtty.
     */
    double getTotalOfferQtty();

    /**
     * <pre>
     *Giá tham chiếu ( nghiệp vụ)
     * </pre>
     *
     * <code>int64 basic_price = 19;</code>
     * @return The basicPrice.
     */
    long getBasicPrice();

    /**
     * <pre>
     *Giá sàn ( nghiệp vụ)
     * </pre>
     *
     * <code>int64 floor_price = 20;</code>
     * @return The floorPrice.
     */
    long getFloorPrice();

    /**
     * <pre>
     *Giá trần ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 ceiling_price = 21;</code>
     * @return The ceilingPrice.
     */
    long getCeilingPrice();

    /**
     * <pre>
     *Giá sàn cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
     * </pre>
     *
     * <code>int64 floor_price_pt = 22;</code>
     * @return The floorPricePt.
     */
    long getFloorPricePt();

    /**
     * <pre>
     *Giá trần cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
     * </pre>
     *
     * <code>int64 ceiling_price_pt = 23;</code>
     * @return The ceilingPricePt.
     */
    long getCeilingPricePt();

    /**
     * <pre>
     *Mệnh giá chứng khoán
     * </pre>
     *
     * <code>int32 par_value = 24;</code>
     * @return The parValue.
     */
    int getParValue();

    /**
     * <pre>
     *Giá khớp gần nhất của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int64 match_price = 25;</code>
     * @return The matchPrice.
     */
    long getMatchPrice();

    /**
     * <pre>
     *KL khớp gần của GD khớp lệnh lô chăn
     * </pre>
     *
     * <code>int32 match_qtty = 26;</code>
     * @return The matchQtty.
     */
    int getMatchQtty();

    /**
     * <pre>
     *Giá mở cửa ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 open_price = 27;</code>
     * @return The openPrice.
     */
    long getOpenPrice();

    /**
     * <pre>
     *Giá mở cửa phiên giao dịch trước phiên giao dịch hiện tại
     * </pre>
     *
     * <code>int64 prior_open_price = 28;</code>
     * @return The priorOpenPrice.
     */
    long getPriorOpenPrice();

    /**
     * <pre>
     *Giá đóng cửa ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 close_price = 29;</code>
     * @return The closePrice.
     */
    long getClosePrice();

    /**
     * <pre>
     *Giá đóng cửa phiên trước phiên giao dịch hiện tại
     * </pre>
     *
     * <code>int64 prior_close_price = 30;</code>
     * @return The priorClosePrice.
     */
    long getPriorClosePrice();

    /**
     * <pre>
     *Tổng KL giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_volume_traded = 31;</code>
     * @return The totalVolumeTraded.
     */
    double getTotalVolumeTraded();

    /**
     * <pre>
     *Tổng giá trị giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_value_traded = 32;</code>
     * @return The totalValueTraded.
     */
    double getTotalValueTraded();

    /**
     * <pre>
     *Giá bình quân ( nghiệp vu)
     * </pre>
     *
     * <code>int32 mid_px = 33;</code>
     * @return The midPx.
     */
    int getMidPx();

    /**
     * <pre>
     *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string trading_date = 34;</code>
     * @return The tradingDate.
     */
    java.lang.String getTradingDate();
    /**
     * <pre>
     *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string trading_date = 34;</code>
     * @return The bytes for tradingDate.
     */
    com.google.protobuf.ByteString
        getTradingDateBytes();

    /**
     * <pre>
     *Thời gian theo định dạng HH:mm:ss
     * </pre>
     *
     * <code>string time = 35;</code>
     * @return The time.
     */
    java.lang.String getTime();
    /**
     * <pre>
     *Thời gian theo định dạng HH:mm:ss
     * </pre>
     *
     * <code>string time = 35;</code>
     * @return The bytes for time.
     */
    com.google.protobuf.ByteString
        getTimeBytes();

    /**
     * <pre>
     *Đơn vị giao dịch nhỏ nhất
     * </pre>
     *
     * <code>int32 trading_unit = 36;</code>
     * @return The tradingUnit.
     */
    int getTradingUnit();

    /**
     * <pre>
     *Khối lượng niêm yết
     * </pre>
     *
     * <code>double total_listing_qtty = 37;</code>
     * @return The totalListingQtty.
     */
    double getTotalListingQtty();

    /**
     * <pre>
     *phiên giao dịch thứ ( kể từ ngày niêm yết)
     * </pre>
     *
     * <code>int32 date_no = 38;</code>
     * @return The dateNo.
     */
    int getDateNo();

    /**
     * <pre>
     *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
     *0: Không xảy ra
     *1:Trả CT bằng tiền
     *2:Trả cổ tức bằng CP/CP thưởng
     *3: Phát hành CP cho cổ đông hiện hữu
     *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
     *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
     *6: Niêm yết bổ sung
     *7: Giảm vốn
     *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
     *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
     *10: Thay đổi tỷ lệ Free Float
     *11: Họp đại cổ đông
     * </pre>
     *
     * <code>string reference_status = 39;</code>
     * @return The referenceStatus.
     */
    java.lang.String getReferenceStatus();
    /**
     * <pre>
     *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
     *0: Không xảy ra
     *1:Trả CT bằng tiền
     *2:Trả cổ tức bằng CP/CP thưởng
     *3: Phát hành CP cho cổ đông hiện hữu
     *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
     *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
     *6: Niêm yết bổ sung
     *7: Giảm vốn
     *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
     *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
     *10: Thay đổi tỷ lệ Free Float
     *11: Họp đại cổ đông
     * </pre>
     *
     * <code>string reference_status = 39;</code>
     * @return The bytes for referenceStatus.
     */
    com.google.protobuf.ByteString
        getReferenceStatusBytes();

    /**
     * <pre>
     *Giá khớp dự kiến của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int64 current_price = 40;</code>
     * @return The currentPrice.
     */
    long getCurrentPrice();

    /**
     * <pre>
     *Khối lượng khớp dự kiến của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 current_qtty = 41;</code>
     * @return The currentQtty.
     */
    int getCurrentQtty();

    /**
     * <pre>
     *Giá thực hiện cao nhất của GD khớp lệnh   (lô chẵn)
     * </pre>
     *
     * <code>int64 highest_price = 42;</code>
     * @return The highestPrice.
     */
    long getHighestPrice();

    /**
     * <pre>
     *Giá thực hiện thấp nhất của GD khớp lệnh   (lô chẵn)
     * </pre>
     *
     * <code>int64 lowest_price = 43;</code>
     * @return The lowestPrice.
     */
    long getLowestPrice();

    /**
     * <pre>
     *Gía khớp lệnh của phiên trước đó. Chỉ tính với khớp lệnh thông thường.
     * </pre>
     *
     * <code>int64 prior_price = 44;</code>
     * @return The priorPrice.
     */
    long getPriorPrice();

    /**
     * <pre>
     *Giá trị khớp lệnh gần nhất của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double match_value = 45;</code>
     * @return The matchValue.
     */
    double getMatchValue();

    /**
     * <pre>
     *Tổng số lệnh đặt bán của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int32 offer_count = 46;</code>
     * @return The offerCount.
     */
    int getOfferCount();

    /**
     * <pre>
     *Tổng số lệnh đặt mua của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int32 bid_count = 47;</code>
     * @return The bidCount.
     */
    int getBidCount();

    /**
     * <pre>
     *Tổng khối lượng giao dịch thông thường của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double nm_total_traded_qtty = 48;</code>
     * @return The nmTotalTradedQtty.
     */
    double getNmTotalTradedQtty();

    /**
     * <pre>
     *Tổng giá trị giao dịch thông thường của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double nm_total_traded_value = 49;</code>
     * @return The nmTotalTradedValue.
     */
    double getNmTotalTradedValue();

    /**
     * <pre>
     *Khối lượng thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_match_qtty = 50;</code>
     * @return The ptMatchQtty.
     */
    double getPtMatchQtty();

    /**
     * <pre>
     *Giá thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int64 pt_match_price = 51;</code>
     * @return The ptMatchPrice.
     */
    long getPtMatchPrice();

    /**
     * <pre>
     *Tổng khối lượng của giao dịch thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_total_traded_qtty = 52;</code>
     * @return The ptTotalTradedQtty.
     */
    double getPtTotalTradedQtty();

    /**
     * <pre>
     *Tổng giá trị của giao dịch thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_total_traded_value = 53;</code>
     * @return The ptTotalTradedValue.
     */
    double getPtTotalTradedValue();

    /**
     * <pre>
     *Tổng khối lượng mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_buy_trading_qtty = 54;</code>
     * @return The totalBuyTradingQtty.
     */
    double getTotalBuyTradingQtty();

    /**
     * <pre>
     *Tổng số lệnh mua khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int32 buy_count = 55;</code>
     * @return The buyCount.
     */
    int getBuyCount();

    /**
     * <pre>
     *Tổng giá trị mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_buy_trading_value = 56;</code>
     * @return The totalBuyTradingValue.
     */
    double getTotalBuyTradingValue();

    /**
     * <pre>
     *Tổng khối lượng bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_sell_trading_qtty = 57;</code>
     * @return The totalSellTradingQtty.
     */
    double getTotalSellTradingQtty();

    /**
     * <pre>
     *Tổng số lệnh bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int32 sell_count = 58;</code>
     * @return The sellCount.
     */
    int getSellCount();

    /**
     * <pre>
     *Tổng giá trị bán khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_sell_trading_value = 59;</code>
     * @return The totalSellTradingValue.
     */
    double getTotalSellTradingValue();

    /**
     * <pre>
     *Tổng khối lượng mua khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double buy_foreign_qtty = 60;</code>
     * @return The buyForeignQtty.
     */
    double getBuyForeignQtty();

    /**
     * <pre>
     *Tổng giá trị mua khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double buy_foreign_value = 61;</code>
     * @return The buyForeignValue.
     */
    double getBuyForeignValue();

    /**
     * <pre>
     *Tổng khối lượng bán khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double sell_foreign_qtty = 62;</code>
     * @return The sellForeignQtty.
     */
    double getSellForeignQtty();

    /**
     * <pre>
     *Tổng giá trị bán khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double sell_foreign_value = 63;</code>
     * @return The sellForeignValue.
     */
    double getSellForeignValue();

    /**
     * <pre>
     *Số lượng còn lại cho phép NDTNN đặt lệnh mua
     * </pre>
     *
     * <code>int32 remain_foreign_qtty = 64;</code>
     * @return The remainForeignQtty.
     */
    int getRemainForeignQtty();

    /**
     * <pre>
     *Tổng KL đặt mua của GD khớp lệnh lô lẻ (trừ sửa, hủy)
     * </pre>
     *
     * <code>double total_bid_qtty_od = 65;</code>
     * @return The totalBidQttyOd.
     */
    double getTotalBidQttyOd();

    /**
     * <pre>
     *Tổng KL đặt bán của GD khớp lệnh lô lẻ (trừ sửa hủy)&#92;
     * </pre>
     *
     * <code>double total_offer_qtty_od = 66;</code>
     * @return The totalOfferQttyOd.
     */
    double getTotalOfferQttyOd();
  }
  /**
   * Protobuf type {@code StockInfo}
   */
  public static final class StockInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:StockInfo)
      StockInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StockInfo.newBuilder() to construct.
    private StockInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StockInfo() {
      senderCompId_ = "";
      symbol_ = "";
      boardCode_ = "";
      tradingSessionId_ = "";
      tradSesStatus_ = "";
      securityType_ = "";
      issueDate_ = "";
      issuer_ = "";
      securityDesc_ = "";
      tradingDate_ = "";
      time_ = "";
      referenceStatus_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StockInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StockInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              senderCompId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              symbol_ = s;
              break;
            }
            case 25: {

              symbolId_ = input.readDouble();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              boardCode_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              tradingSessionId_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              tradSesStatus_ = s;
              break;
            }
            case 56: {

              securityTradingStatus_ = input.readInt32();
              break;
            }
            case 64: {

              listingStatus_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              securityType_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              issueDate_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              issuer_ = s;
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              securityDesc_ = s;
              break;
            }
            case 104: {

              bestBidPrice_ = input.readInt32();
              break;
            }
            case 112: {

              bestBidQtty_ = input.readInt32();
              break;
            }
            case 120: {

              bestOfferPrice_ = input.readInt32();
              break;
            }
            case 128: {

              bestOfferQtty_ = input.readInt32();
              break;
            }
            case 137: {

              totalBidQtty_ = input.readDouble();
              break;
            }
            case 145: {

              totalOfferQtty_ = input.readDouble();
              break;
            }
            case 152: {

              basicPrice_ = input.readInt64();
              break;
            }
            case 160: {

              floorPrice_ = input.readInt64();
              break;
            }
            case 168: {

              ceilingPrice_ = input.readInt64();
              break;
            }
            case 176: {

              floorPricePt_ = input.readInt64();
              break;
            }
            case 184: {

              ceilingPricePt_ = input.readInt64();
              break;
            }
            case 192: {

              parValue_ = input.readInt32();
              break;
            }
            case 200: {

              matchPrice_ = input.readInt64();
              break;
            }
            case 208: {

              matchQtty_ = input.readInt32();
              break;
            }
            case 216: {

              openPrice_ = input.readInt64();
              break;
            }
            case 224: {

              priorOpenPrice_ = input.readInt64();
              break;
            }
            case 232: {

              closePrice_ = input.readInt64();
              break;
            }
            case 240: {

              priorClosePrice_ = input.readInt64();
              break;
            }
            case 249: {

              totalVolumeTraded_ = input.readDouble();
              break;
            }
            case 257: {

              totalValueTraded_ = input.readDouble();
              break;
            }
            case 264: {

              midPx_ = input.readInt32();
              break;
            }
            case 274: {
              java.lang.String s = input.readStringRequireUtf8();

              tradingDate_ = s;
              break;
            }
            case 282: {
              java.lang.String s = input.readStringRequireUtf8();

              time_ = s;
              break;
            }
            case 288: {

              tradingUnit_ = input.readInt32();
              break;
            }
            case 297: {

              totalListingQtty_ = input.readDouble();
              break;
            }
            case 304: {

              dateNo_ = input.readInt32();
              break;
            }
            case 314: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceStatus_ = s;
              break;
            }
            case 320: {

              currentPrice_ = input.readInt64();
              break;
            }
            case 328: {

              currentQtty_ = input.readInt32();
              break;
            }
            case 336: {

              highestPrice_ = input.readInt64();
              break;
            }
            case 344: {

              lowestPrice_ = input.readInt64();
              break;
            }
            case 352: {

              priorPrice_ = input.readInt64();
              break;
            }
            case 361: {

              matchValue_ = input.readDouble();
              break;
            }
            case 368: {

              offerCount_ = input.readInt32();
              break;
            }
            case 376: {

              bidCount_ = input.readInt32();
              break;
            }
            case 385: {

              nmTotalTradedQtty_ = input.readDouble();
              break;
            }
            case 393: {

              nmTotalTradedValue_ = input.readDouble();
              break;
            }
            case 401: {

              ptMatchQtty_ = input.readDouble();
              break;
            }
            case 408: {

              ptMatchPrice_ = input.readInt64();
              break;
            }
            case 417: {

              ptTotalTradedQtty_ = input.readDouble();
              break;
            }
            case 425: {

              ptTotalTradedValue_ = input.readDouble();
              break;
            }
            case 433: {

              totalBuyTradingQtty_ = input.readDouble();
              break;
            }
            case 440: {

              buyCount_ = input.readInt32();
              break;
            }
            case 449: {

              totalBuyTradingValue_ = input.readDouble();
              break;
            }
            case 457: {

              totalSellTradingQtty_ = input.readDouble();
              break;
            }
            case 464: {

              sellCount_ = input.readInt32();
              break;
            }
            case 473: {

              totalSellTradingValue_ = input.readDouble();
              break;
            }
            case 481: {

              buyForeignQtty_ = input.readDouble();
              break;
            }
            case 489: {

              buyForeignValue_ = input.readDouble();
              break;
            }
            case 497: {

              sellForeignQtty_ = input.readDouble();
              break;
            }
            case 505: {

              sellForeignValue_ = input.readDouble();
              break;
            }
            case 512: {

              remainForeignQtty_ = input.readInt32();
              break;
            }
            case 521: {

              totalBidQttyOd_ = input.readDouble();
              break;
            }
            case 529: {

              totalOfferQttyOd_ = input.readDouble();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.example.proto.ReadData.internal_static_StockInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.example.proto.ReadData.internal_static_StockInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.example.proto.ReadData.StockInfo.class, com.example.proto.ReadData.StockInfo.Builder.class);
    }

    public static final int SENDER_COMP_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object senderCompId_;
    /**
     * <pre>
     *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
     * </pre>
     *
     * <code>string sender_comp_id = 1;</code>
     * @return The senderCompId.
     */
    @java.lang.Override
    public java.lang.String getSenderCompId() {
      java.lang.Object ref = senderCompId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        senderCompId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
     * </pre>
     *
     * <code>string sender_comp_id = 1;</code>
     * @return The bytes for senderCompId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSenderCompIdBytes() {
      java.lang.Object ref = senderCompId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        senderCompId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_FIELD_NUMBER = 2;
    private volatile java.lang.Object symbol_;
    /**
     * <pre>
     *Mã chứng khoán
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The symbol.
     */
    @java.lang.Override
    public java.lang.String getSymbol() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        symbol_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Mã chứng khoán
     * </pre>
     *
     * <code>string symbol = 2;</code>
     * @return The bytes for symbol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSymbolBytes() {
      java.lang.Object ref = symbol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        symbol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SYMBOL_ID_FIELD_NUMBER = 3;
    private double symbolId_;
    /**
     * <pre>
     *Id chứng khoán
     * </pre>
     *
     * <code>double symbol_id = 3;</code>
     * @return The symbolId.
     */
    @java.lang.Override
    public double getSymbolId() {
      return symbolId_;
    }

    public static final int BOARD_CODE_FIELD_NUMBER = 4;
    private volatile java.lang.Object boardCode_;
    /**
     * <pre>
     *Mã bảng của chứng khoán
     * </pre>
     *
     * <code>string board_code = 4;</code>
     * @return The boardCode.
     */
    @java.lang.Override
    public java.lang.String getBoardCode() {
      java.lang.Object ref = boardCode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        boardCode_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Mã bảng của chứng khoán
     * </pre>
     *
     * <code>string board_code = 4;</code>
     * @return The bytes for boardCode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getBoardCodeBytes() {
      java.lang.Object ref = boardCode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        boardCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRADING_SESSION_ID_FIELD_NUMBER = 5;
    private volatile java.lang.Object tradingSessionId_;
    /**
     * <pre>
     *Mã trạng thái giao dịch
     * </pre>
     *
     * <code>string trading_session_id = 5;</code>
     * @return The tradingSessionId.
     */
    @java.lang.Override
    public java.lang.String getTradingSessionId() {
      java.lang.Object ref = tradingSessionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tradingSessionId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Mã trạng thái giao dịch
     * </pre>
     *
     * <code>string trading_session_id = 5;</code>
     * @return The bytes for tradingSessionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTradingSessionIdBytes() {
      java.lang.Object ref = tradingSessionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tradingSessionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRAD_SES_STATUS_FIELD_NUMBER = 6;
    private volatile java.lang.Object tradSesStatus_;
    /**
     * <pre>
     *Trạng thái giao dịch:
     *= 0 Chưa bắt đầu.
     *= 1 Bình thường
     *= 2 Tạm dừng
     *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
     *= 4 Tạm dừng do Circuit Break
     *= 5 Phiên định kỳ sau Circuit Break
     *= 6 Chứng khoán đang Prolong
     *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
     *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
     *= 97 Đóng cửa thị trường.
     * </pre>
     *
     * <code>string trad_ses_status = 6;</code>
     * @return The tradSesStatus.
     */
    @java.lang.Override
    public java.lang.String getTradSesStatus() {
      java.lang.Object ref = tradSesStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tradSesStatus_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Trạng thái giao dịch:
     *= 0 Chưa bắt đầu.
     *= 1 Bình thường
     *= 2 Tạm dừng
     *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
     *= 4 Tạm dừng do Circuit Break
     *= 5 Phiên định kỳ sau Circuit Break
     *= 6 Chứng khoán đang Prolong
     *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
     *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
     *= 97 Đóng cửa thị trường.
     * </pre>
     *
     * <code>string trad_ses_status = 6;</code>
     * @return The bytes for tradSesStatus.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTradSesStatusBytes() {
      java.lang.Object ref = tradSesStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tradSesStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECURITY_TRADING_STATUS_FIELD_NUMBER = 7;
    private int securityTradingStatus_;
    /**
     * <pre>
     *Trạng thái chứng khoán:
     *= 0: Bình thường
     *= 1: Chứng khoán không được giao dịch trong ngày
     *= 2: Ngừng giao dịch
     *= 6: Hủy niêm yết
     *= 7: Niêm yết mới
     *= 8: Sắp hủy niêm yết
     *=10: Tạm ngừng giao dịch giữa phiên
     *= 25: Giao dịch đặc biệt
     * </pre>
     *
     * <code>int32 security_trading_status = 7;</code>
     * @return The securityTradingStatus.
     */
    @java.lang.Override
    public int getSecurityTradingStatus() {
      return securityTradingStatus_;
    }

    public static final int LISTING_STATUS_FIELD_NUMBER = 8;
    private int listingStatus_;
    /**
     * <pre>
     *Tình trạng chứng khoán
     *=0: Bình thường
     *=2: Bị cảnh báo
     *=3: Bị kiểm soát
     * </pre>
     *
     * <code>int32 listing_status = 8;</code>
     * @return The listingStatus.
     */
    @java.lang.Override
    public int getListingStatus() {
      return listingStatus_;
    }

    public static final int SECURITY_TYPE_FIELD_NUMBER = 9;
    private volatile java.lang.Object securityType_;
    /**
     * <pre>
     *Loại chứng khoán:
     *ST: Cổ phiếu
     *BO: Trái phiếu
     *MF: Chứng chỉ quỹ
     *EF: ETF
     *FU : Future
     *OP: Option
     * </pre>
     *
     * <code>string security_type = 9;</code>
     * @return The securityType.
     */
    @java.lang.Override
    public java.lang.String getSecurityType() {
      java.lang.Object ref = securityType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        securityType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Loại chứng khoán:
     *ST: Cổ phiếu
     *BO: Trái phiếu
     *MF: Chứng chỉ quỹ
     *EF: ETF
     *FU : Future
     *OP: Option
     * </pre>
     *
     * <code>string security_type = 9;</code>
     * @return The bytes for securityType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecurityTypeBytes() {
      java.lang.Object ref = securityType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSUE_DATE_FIELD_NUMBER = 10;
    private volatile java.lang.Object issueDate_;
    /**
     * <pre>
     *Ngày phát hành theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string issue_date = 10;</code>
     * @return The issueDate.
     */
    @java.lang.Override
    public java.lang.String getIssueDate() {
      java.lang.Object ref = issueDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        issueDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Ngày phát hành theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string issue_date = 10;</code>
     * @return The bytes for issueDate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIssueDateBytes() {
      java.lang.Object ref = issueDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        issueDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISSUER_FIELD_NUMBER = 11;
    private volatile java.lang.Object issuer_;
    /**
     * <pre>
     *Tổ chức phát hành
     * </pre>
     *
     * <code>string issuer = 11;</code>
     * @return The issuer.
     */
    @java.lang.Override
    public java.lang.String getIssuer() {
      java.lang.Object ref = issuer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        issuer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Tổ chức phát hành
     * </pre>
     *
     * <code>string issuer = 11;</code>
     * @return The bytes for issuer.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIssuerBytes() {
      java.lang.Object ref = issuer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        issuer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECURITY_DESC_FIELD_NUMBER = 12;
    private volatile java.lang.Object securityDesc_;
    /**
     * <pre>
     *Mô tả thêm về chứng khoán
     * </pre>
     *
     * <code>string security_desc = 12;</code>
     * @return The securityDesc.
     */
    @java.lang.Override
    public java.lang.String getSecurityDesc() {
      java.lang.Object ref = securityDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        securityDesc_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Mô tả thêm về chứng khoán
     * </pre>
     *
     * <code>string security_desc = 12;</code>
     * @return The bytes for securityDesc.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecurityDescBytes() {
      java.lang.Object ref = securityDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        securityDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEST_BID_PRICE_FIELD_NUMBER = 13;
    private int bestBidPrice_;
    /**
     * <pre>
     *Giá đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_bid_price = 13;</code>
     * @return The bestBidPrice.
     */
    @java.lang.Override
    public int getBestBidPrice() {
      return bestBidPrice_;
    }

    public static final int BEST_BID_QTTY_FIELD_NUMBER = 14;
    private int bestBidQtty_;
    /**
     * <pre>
     *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_bid_qtty = 14;</code>
     * @return The bestBidQtty.
     */
    @java.lang.Override
    public int getBestBidQtty() {
      return bestBidQtty_;
    }

    public static final int BEST_OFFER_PRICE_FIELD_NUMBER = 15;
    private int bestOfferPrice_;
    /**
     * <pre>
     *Giá đặt bán tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_offer_price = 15;</code>
     * @return The bestOfferPrice.
     */
    @java.lang.Override
    public int getBestOfferPrice() {
      return bestOfferPrice_;
    }

    public static final int BEST_OFFER_QTTY_FIELD_NUMBER = 16;
    private int bestOfferQtty_;
    /**
     * <pre>
     *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 best_offer_qtty = 16;</code>
     * @return The bestOfferQtty.
     */
    @java.lang.Override
    public int getBestOfferQtty() {
      return bestOfferQtty_;
    }

    public static final int TOTAL_BID_QTTY_FIELD_NUMBER = 17;
    private double totalBidQtty_;
    /**
     * <pre>
     *Tổng KL đặt mua của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
     * </pre>
     *
     * <code>double total_bid_qtty = 17;</code>
     * @return The totalBidQtty.
     */
    @java.lang.Override
    public double getTotalBidQtty() {
      return totalBidQtty_;
    }

    public static final int TOTAL_OFFER_QTTY_FIELD_NUMBER = 18;
    private double totalOfferQtty_;
    /**
     * <pre>
     *Tổng KL đặt bán của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
     * </pre>
     *
     * <code>double total_offer_qtty = 18;</code>
     * @return The totalOfferQtty.
     */
    @java.lang.Override
    public double getTotalOfferQtty() {
      return totalOfferQtty_;
    }

    public static final int BASIC_PRICE_FIELD_NUMBER = 19;
    private long basicPrice_;
    /**
     * <pre>
     *Giá tham chiếu ( nghiệp vụ)
     * </pre>
     *
     * <code>int64 basic_price = 19;</code>
     * @return The basicPrice.
     */
    @java.lang.Override
    public long getBasicPrice() {
      return basicPrice_;
    }

    public static final int FLOOR_PRICE_FIELD_NUMBER = 20;
    private long floorPrice_;
    /**
     * <pre>
     *Giá sàn ( nghiệp vụ)
     * </pre>
     *
     * <code>int64 floor_price = 20;</code>
     * @return The floorPrice.
     */
    @java.lang.Override
    public long getFloorPrice() {
      return floorPrice_;
    }

    public static final int CEILING_PRICE_FIELD_NUMBER = 21;
    private long ceilingPrice_;
    /**
     * <pre>
     *Giá trần ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 ceiling_price = 21;</code>
     * @return The ceilingPrice.
     */
    @java.lang.Override
    public long getCeilingPrice() {
      return ceilingPrice_;
    }

    public static final int FLOOR_PRICE_PT_FIELD_NUMBER = 22;
    private long floorPricePt_;
    /**
     * <pre>
     *Giá sàn cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
     * </pre>
     *
     * <code>int64 floor_price_pt = 22;</code>
     * @return The floorPricePt.
     */
    @java.lang.Override
    public long getFloorPricePt() {
      return floorPricePt_;
    }

    public static final int CEILING_PRICE_PT_FIELD_NUMBER = 23;
    private long ceilingPricePt_;
    /**
     * <pre>
     *Giá trần cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
     * </pre>
     *
     * <code>int64 ceiling_price_pt = 23;</code>
     * @return The ceilingPricePt.
     */
    @java.lang.Override
    public long getCeilingPricePt() {
      return ceilingPricePt_;
    }

    public static final int PAR_VALUE_FIELD_NUMBER = 24;
    private int parValue_;
    /**
     * <pre>
     *Mệnh giá chứng khoán
     * </pre>
     *
     * <code>int32 par_value = 24;</code>
     * @return The parValue.
     */
    @java.lang.Override
    public int getParValue() {
      return parValue_;
    }

    public static final int MATCH_PRICE_FIELD_NUMBER = 25;
    private long matchPrice_;
    /**
     * <pre>
     *Giá khớp gần nhất của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int64 match_price = 25;</code>
     * @return The matchPrice.
     */
    @java.lang.Override
    public long getMatchPrice() {
      return matchPrice_;
    }

    public static final int MATCH_QTTY_FIELD_NUMBER = 26;
    private int matchQtty_;
    /**
     * <pre>
     *KL khớp gần của GD khớp lệnh lô chăn
     * </pre>
     *
     * <code>int32 match_qtty = 26;</code>
     * @return The matchQtty.
     */
    @java.lang.Override
    public int getMatchQtty() {
      return matchQtty_;
    }

    public static final int OPEN_PRICE_FIELD_NUMBER = 27;
    private long openPrice_;
    /**
     * <pre>
     *Giá mở cửa ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 open_price = 27;</code>
     * @return The openPrice.
     */
    @java.lang.Override
    public long getOpenPrice() {
      return openPrice_;
    }

    public static final int PRIOR_OPEN_PRICE_FIELD_NUMBER = 28;
    private long priorOpenPrice_;
    /**
     * <pre>
     *Giá mở cửa phiên giao dịch trước phiên giao dịch hiện tại
     * </pre>
     *
     * <code>int64 prior_open_price = 28;</code>
     * @return The priorOpenPrice.
     */
    @java.lang.Override
    public long getPriorOpenPrice() {
      return priorOpenPrice_;
    }

    public static final int CLOSE_PRICE_FIELD_NUMBER = 29;
    private long closePrice_;
    /**
     * <pre>
     *Giá đóng cửa ( nghiệp vụ )
     * </pre>
     *
     * <code>int64 close_price = 29;</code>
     * @return The closePrice.
     */
    @java.lang.Override
    public long getClosePrice() {
      return closePrice_;
    }

    public static final int PRIOR_CLOSE_PRICE_FIELD_NUMBER = 30;
    private long priorClosePrice_;
    /**
     * <pre>
     *Giá đóng cửa phiên trước phiên giao dịch hiện tại
     * </pre>
     *
     * <code>int64 prior_close_price = 30;</code>
     * @return The priorClosePrice.
     */
    @java.lang.Override
    public long getPriorClosePrice() {
      return priorClosePrice_;
    }

    public static final int TOTAL_VOLUME_TRADED_FIELD_NUMBER = 31;
    private double totalVolumeTraded_;
    /**
     * <pre>
     *Tổng KL giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_volume_traded = 31;</code>
     * @return The totalVolumeTraded.
     */
    @java.lang.Override
    public double getTotalVolumeTraded() {
      return totalVolumeTraded_;
    }

    public static final int TOTAL_VALUE_TRADED_FIELD_NUMBER = 32;
    private double totalValueTraded_;
    /**
     * <pre>
     *Tổng giá trị giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_value_traded = 32;</code>
     * @return The totalValueTraded.
     */
    @java.lang.Override
    public double getTotalValueTraded() {
      return totalValueTraded_;
    }

    public static final int MID_PX_FIELD_NUMBER = 33;
    private int midPx_;
    /**
     * <pre>
     *Giá bình quân ( nghiệp vu)
     * </pre>
     *
     * <code>int32 mid_px = 33;</code>
     * @return The midPx.
     */
    @java.lang.Override
    public int getMidPx() {
      return midPx_;
    }

    public static final int TRADING_DATE_FIELD_NUMBER = 34;
    private volatile java.lang.Object tradingDate_;
    /**
     * <pre>
     *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string trading_date = 34;</code>
     * @return The tradingDate.
     */
    @java.lang.Override
    public java.lang.String getTradingDate() {
      java.lang.Object ref = tradingDate_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tradingDate_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
     * </pre>
     *
     * <code>string trading_date = 34;</code>
     * @return The bytes for tradingDate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTradingDateBytes() {
      java.lang.Object ref = tradingDate_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tradingDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_FIELD_NUMBER = 35;
    private volatile java.lang.Object time_;
    /**
     * <pre>
     *Thời gian theo định dạng HH:mm:ss
     * </pre>
     *
     * <code>string time = 35;</code>
     * @return The time.
     */
    @java.lang.Override
    public java.lang.String getTime() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        time_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Thời gian theo định dạng HH:mm:ss
     * </pre>
     *
     * <code>string time = 35;</code>
     * @return The bytes for time.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimeBytes() {
      java.lang.Object ref = time_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        time_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRADING_UNIT_FIELD_NUMBER = 36;
    private int tradingUnit_;
    /**
     * <pre>
     *Đơn vị giao dịch nhỏ nhất
     * </pre>
     *
     * <code>int32 trading_unit = 36;</code>
     * @return The tradingUnit.
     */
    @java.lang.Override
    public int getTradingUnit() {
      return tradingUnit_;
    }

    public static final int TOTAL_LISTING_QTTY_FIELD_NUMBER = 37;
    private double totalListingQtty_;
    /**
     * <pre>
     *Khối lượng niêm yết
     * </pre>
     *
     * <code>double total_listing_qtty = 37;</code>
     * @return The totalListingQtty.
     */
    @java.lang.Override
    public double getTotalListingQtty() {
      return totalListingQtty_;
    }

    public static final int DATE_NO_FIELD_NUMBER = 38;
    private int dateNo_;
    /**
     * <pre>
     *phiên giao dịch thứ ( kể từ ngày niêm yết)
     * </pre>
     *
     * <code>int32 date_no = 38;</code>
     * @return The dateNo.
     */
    @java.lang.Override
    public int getDateNo() {
      return dateNo_;
    }

    public static final int REFERENCE_STATUS_FIELD_NUMBER = 39;
    private volatile java.lang.Object referenceStatus_;
    /**
     * <pre>
     *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
     *0: Không xảy ra
     *1:Trả CT bằng tiền
     *2:Trả cổ tức bằng CP/CP thưởng
     *3: Phát hành CP cho cổ đông hiện hữu
     *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
     *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
     *6: Niêm yết bổ sung
     *7: Giảm vốn
     *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
     *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
     *10: Thay đổi tỷ lệ Free Float
     *11: Họp đại cổ đông
     * </pre>
     *
     * <code>string reference_status = 39;</code>
     * @return The referenceStatus.
     */
    @java.lang.Override
    public java.lang.String getReferenceStatus() {
      java.lang.Object ref = referenceStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceStatus_ = s;
        return s;
      }
    }
    /**
     * <pre>
     *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
     *0: Không xảy ra
     *1:Trả CT bằng tiền
     *2:Trả cổ tức bằng CP/CP thưởng
     *3: Phát hành CP cho cổ đông hiện hữu
     *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
     *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
     *6: Niêm yết bổ sung
     *7: Giảm vốn
     *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
     *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
     *10: Thay đổi tỷ lệ Free Float
     *11: Họp đại cổ đông
     * </pre>
     *
     * <code>string reference_status = 39;</code>
     * @return The bytes for referenceStatus.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReferenceStatusBytes() {
      java.lang.Object ref = referenceStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CURRENT_PRICE_FIELD_NUMBER = 40;
    private long currentPrice_;
    /**
     * <pre>
     *Giá khớp dự kiến của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int64 current_price = 40;</code>
     * @return The currentPrice.
     */
    @java.lang.Override
    public long getCurrentPrice() {
      return currentPrice_;
    }

    public static final int CURRENT_QTTY_FIELD_NUMBER = 41;
    private int currentQtty_;
    /**
     * <pre>
     *Khối lượng khớp dự kiến của GD khớp lệnh (lô chẵn)
     * </pre>
     *
     * <code>int32 current_qtty = 41;</code>
     * @return The currentQtty.
     */
    @java.lang.Override
    public int getCurrentQtty() {
      return currentQtty_;
    }

    public static final int HIGHEST_PRICE_FIELD_NUMBER = 42;
    private long highestPrice_;
    /**
     * <pre>
     *Giá thực hiện cao nhất của GD khớp lệnh   (lô chẵn)
     * </pre>
     *
     * <code>int64 highest_price = 42;</code>
     * @return The highestPrice.
     */
    @java.lang.Override
    public long getHighestPrice() {
      return highestPrice_;
    }

    public static final int LOWEST_PRICE_FIELD_NUMBER = 43;
    private long lowestPrice_;
    /**
     * <pre>
     *Giá thực hiện thấp nhất của GD khớp lệnh   (lô chẵn)
     * </pre>
     *
     * <code>int64 lowest_price = 43;</code>
     * @return The lowestPrice.
     */
    @java.lang.Override
    public long getLowestPrice() {
      return lowestPrice_;
    }

    public static final int PRIOR_PRICE_FIELD_NUMBER = 44;
    private long priorPrice_;
    /**
     * <pre>
     *Gía khớp lệnh của phiên trước đó. Chỉ tính với khớp lệnh thông thường.
     * </pre>
     *
     * <code>int64 prior_price = 44;</code>
     * @return The priorPrice.
     */
    @java.lang.Override
    public long getPriorPrice() {
      return priorPrice_;
    }

    public static final int MATCH_VALUE_FIELD_NUMBER = 45;
    private double matchValue_;
    /**
     * <pre>
     *Giá trị khớp lệnh gần nhất của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double match_value = 45;</code>
     * @return The matchValue.
     */
    @java.lang.Override
    public double getMatchValue() {
      return matchValue_;
    }

    public static final int OFFER_COUNT_FIELD_NUMBER = 46;
    private int offerCount_;
    /**
     * <pre>
     *Tổng số lệnh đặt bán của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int32 offer_count = 46;</code>
     * @return The offerCount.
     */
    @java.lang.Override
    public int getOfferCount() {
      return offerCount_;
    }

    public static final int BID_COUNT_FIELD_NUMBER = 47;
    private int bidCount_;
    /**
     * <pre>
     *Tổng số lệnh đặt mua của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>int32 bid_count = 47;</code>
     * @return The bidCount.
     */
    @java.lang.Override
    public int getBidCount() {
      return bidCount_;
    }

    public static final int NM_TOTAL_TRADED_QTTY_FIELD_NUMBER = 48;
    private double nmTotalTradedQtty_;
    /**
     * <pre>
     *Tổng khối lượng giao dịch thông thường của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double nm_total_traded_qtty = 48;</code>
     * @return The nmTotalTradedQtty.
     */
    @java.lang.Override
    public double getNmTotalTradedQtty() {
      return nmTotalTradedQtty_;
    }

    public static final int NM_TOTAL_TRADED_VALUE_FIELD_NUMBER = 49;
    private double nmTotalTradedValue_;
    /**
     * <pre>
     *Tổng giá trị giao dịch thông thường của GD khớp lệnh lô chẵn
     * </pre>
     *
     * <code>double nm_total_traded_value = 49;</code>
     * @return The nmTotalTradedValue.
     */
    @java.lang.Override
    public double getNmTotalTradedValue() {
      return nmTotalTradedValue_;
    }

    public static final int PT_MATCH_QTTY_FIELD_NUMBER = 50;
    private double ptMatchQtty_;
    /**
     * <pre>
     *Khối lượng thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_match_qtty = 50;</code>
     * @return The ptMatchQtty.
     */
    @java.lang.Override
    public double getPtMatchQtty() {
      return ptMatchQtty_;
    }

    public static final int PT_MATCH_PRICE_FIELD_NUMBER = 51;
    private long ptMatchPrice_;
    /**
     * <pre>
     *Giá thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int64 pt_match_price = 51;</code>
     * @return The ptMatchPrice.
     */
    @java.lang.Override
    public long getPtMatchPrice() {
      return ptMatchPrice_;
    }

    public static final int PT_TOTAL_TRADED_QTTY_FIELD_NUMBER = 52;
    private double ptTotalTradedQtty_;
    /**
     * <pre>
     *Tổng khối lượng của giao dịch thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_total_traded_qtty = 52;</code>
     * @return The ptTotalTradedQtty.
     */
    @java.lang.Override
    public double getPtTotalTradedQtty() {
      return ptTotalTradedQtty_;
    }

    public static final int PT_TOTAL_TRADED_VALUE_FIELD_NUMBER = 53;
    private double ptTotalTradedValue_;
    /**
     * <pre>
     *Tổng giá trị của giao dịch thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double pt_total_traded_value = 53;</code>
     * @return The ptTotalTradedValue.
     */
    @java.lang.Override
    public double getPtTotalTradedValue() {
      return ptTotalTradedValue_;
    }

    public static final int TOTAL_BUY_TRADING_QTTY_FIELD_NUMBER = 54;
    private double totalBuyTradingQtty_;
    /**
     * <pre>
     *Tổng khối lượng mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_buy_trading_qtty = 54;</code>
     * @return The totalBuyTradingQtty.
     */
    @java.lang.Override
    public double getTotalBuyTradingQtty() {
      return totalBuyTradingQtty_;
    }

    public static final int BUY_COUNT_FIELD_NUMBER = 55;
    private int buyCount_;
    /**
     * <pre>
     *Tổng số lệnh mua khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int32 buy_count = 55;</code>
     * @return The buyCount.
     */
    @java.lang.Override
    public int getBuyCount() {
      return buyCount_;
    }

    public static final int TOTAL_BUY_TRADING_VALUE_FIELD_NUMBER = 56;
    private double totalBuyTradingValue_;
    /**
     * <pre>
     *Tổng giá trị mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_buy_trading_value = 56;</code>
     * @return The totalBuyTradingValue.
     */
    @java.lang.Override
    public double getTotalBuyTradingValue() {
      return totalBuyTradingValue_;
    }

    public static final int TOTAL_SELL_TRADING_QTTY_FIELD_NUMBER = 57;
    private double totalSellTradingQtty_;
    /**
     * <pre>
     *Tổng khối lượng bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_sell_trading_qtty = 57;</code>
     * @return The totalSellTradingQtty.
     */
    @java.lang.Override
    public double getTotalSellTradingQtty() {
      return totalSellTradingQtty_;
    }

    public static final int SELL_COUNT_FIELD_NUMBER = 58;
    private int sellCount_;
    /**
     * <pre>
     *Tổng số lệnh bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
     * </pre>
     *
     * <code>int32 sell_count = 58;</code>
     * @return The sellCount.
     */
    @java.lang.Override
    public int getSellCount() {
      return sellCount_;
    }

    public static final int TOTAL_SELL_TRADING_VALUE_FIELD_NUMBER = 59;
    private double totalSellTradingValue_;
    /**
     * <pre>
     *Tổng giá trị bán khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double total_sell_trading_value = 59;</code>
     * @return The totalSellTradingValue.
     */
    @java.lang.Override
    public double getTotalSellTradingValue() {
      return totalSellTradingValue_;
    }

    public static final int BUY_FOREIGN_QTTY_FIELD_NUMBER = 60;
    private double buyForeignQtty_;
    /**
     * <pre>
     *Tổng khối lượng mua khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double buy_foreign_qtty = 60;</code>
     * @return The buyForeignQtty.
     */
    @java.lang.Override
    public double getBuyForeignQtty() {
      return buyForeignQtty_;
    }

    public static final int BUY_FOREIGN_VALUE_FIELD_NUMBER = 61;
    private double buyForeignValue_;
    /**
     * <pre>
     *Tổng giá trị mua khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double buy_foreign_value = 61;</code>
     * @return The buyForeignValue.
     */
    @java.lang.Override
    public double getBuyForeignValue() {
      return buyForeignValue_;
    }

    public static final int SELL_FOREIGN_QTTY_FIELD_NUMBER = 62;
    private double sellForeignQtty_;
    /**
     * <pre>
     *Tổng khối lượng bán khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double sell_foreign_qtty = 62;</code>
     * @return The sellForeignQtty.
     */
    @java.lang.Override
    public double getSellForeignQtty() {
      return sellForeignQtty_;
    }

    public static final int SELL_FOREIGN_VALUE_FIELD_NUMBER = 63;
    private double sellForeignValue_;
    /**
     * <pre>
     *Tổng giá trị bán khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
     * </pre>
     *
     * <code>double sell_foreign_value = 63;</code>
     * @return The sellForeignValue.
     */
    @java.lang.Override
    public double getSellForeignValue() {
      return sellForeignValue_;
    }

    public static final int REMAIN_FOREIGN_QTTY_FIELD_NUMBER = 64;
    private int remainForeignQtty_;
    /**
     * <pre>
     *Số lượng còn lại cho phép NDTNN đặt lệnh mua
     * </pre>
     *
     * <code>int32 remain_foreign_qtty = 64;</code>
     * @return The remainForeignQtty.
     */
    @java.lang.Override
    public int getRemainForeignQtty() {
      return remainForeignQtty_;
    }

    public static final int TOTAL_BID_QTTY_OD_FIELD_NUMBER = 65;
    private double totalBidQttyOd_;
    /**
     * <pre>
     *Tổng KL đặt mua của GD khớp lệnh lô lẻ (trừ sửa, hủy)
     * </pre>
     *
     * <code>double total_bid_qtty_od = 65;</code>
     * @return The totalBidQttyOd.
     */
    @java.lang.Override
    public double getTotalBidQttyOd() {
      return totalBidQttyOd_;
    }

    public static final int TOTAL_OFFER_QTTY_OD_FIELD_NUMBER = 66;
    private double totalOfferQttyOd_;
    /**
     * <pre>
     *Tổng KL đặt bán của GD khớp lệnh lô lẻ (trừ sửa hủy)&#92;
     * </pre>
     *
     * <code>double total_offer_qtty_od = 66;</code>
     * @return The totalOfferQttyOd.
     */
    @java.lang.Override
    public double getTotalOfferQttyOd() {
      return totalOfferQttyOd_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSenderCompIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, senderCompId_);
      }
      if (!getSymbolBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, symbol_);
      }
      if (symbolId_ != 0D) {
        output.writeDouble(3, symbolId_);
      }
      if (!getBoardCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, boardCode_);
      }
      if (!getTradingSessionIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, tradingSessionId_);
      }
      if (!getTradSesStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, tradSesStatus_);
      }
      if (securityTradingStatus_ != 0) {
        output.writeInt32(7, securityTradingStatus_);
      }
      if (listingStatus_ != 0) {
        output.writeInt32(8, listingStatus_);
      }
      if (!getSecurityTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, securityType_);
      }
      if (!getIssueDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, issueDate_);
      }
      if (!getIssuerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, issuer_);
      }
      if (!getSecurityDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, securityDesc_);
      }
      if (bestBidPrice_ != 0) {
        output.writeInt32(13, bestBidPrice_);
      }
      if (bestBidQtty_ != 0) {
        output.writeInt32(14, bestBidQtty_);
      }
      if (bestOfferPrice_ != 0) {
        output.writeInt32(15, bestOfferPrice_);
      }
      if (bestOfferQtty_ != 0) {
        output.writeInt32(16, bestOfferQtty_);
      }
      if (totalBidQtty_ != 0D) {
        output.writeDouble(17, totalBidQtty_);
      }
      if (totalOfferQtty_ != 0D) {
        output.writeDouble(18, totalOfferQtty_);
      }
      if (basicPrice_ != 0L) {
        output.writeInt64(19, basicPrice_);
      }
      if (floorPrice_ != 0L) {
        output.writeInt64(20, floorPrice_);
      }
      if (ceilingPrice_ != 0L) {
        output.writeInt64(21, ceilingPrice_);
      }
      if (floorPricePt_ != 0L) {
        output.writeInt64(22, floorPricePt_);
      }
      if (ceilingPricePt_ != 0L) {
        output.writeInt64(23, ceilingPricePt_);
      }
      if (parValue_ != 0) {
        output.writeInt32(24, parValue_);
      }
      if (matchPrice_ != 0L) {
        output.writeInt64(25, matchPrice_);
      }
      if (matchQtty_ != 0) {
        output.writeInt32(26, matchQtty_);
      }
      if (openPrice_ != 0L) {
        output.writeInt64(27, openPrice_);
      }
      if (priorOpenPrice_ != 0L) {
        output.writeInt64(28, priorOpenPrice_);
      }
      if (closePrice_ != 0L) {
        output.writeInt64(29, closePrice_);
      }
      if (priorClosePrice_ != 0L) {
        output.writeInt64(30, priorClosePrice_);
      }
      if (totalVolumeTraded_ != 0D) {
        output.writeDouble(31, totalVolumeTraded_);
      }
      if (totalValueTraded_ != 0D) {
        output.writeDouble(32, totalValueTraded_);
      }
      if (midPx_ != 0) {
        output.writeInt32(33, midPx_);
      }
      if (!getTradingDateBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 34, tradingDate_);
      }
      if (!getTimeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 35, time_);
      }
      if (tradingUnit_ != 0) {
        output.writeInt32(36, tradingUnit_);
      }
      if (totalListingQtty_ != 0D) {
        output.writeDouble(37, totalListingQtty_);
      }
      if (dateNo_ != 0) {
        output.writeInt32(38, dateNo_);
      }
      if (!getReferenceStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 39, referenceStatus_);
      }
      if (currentPrice_ != 0L) {
        output.writeInt64(40, currentPrice_);
      }
      if (currentQtty_ != 0) {
        output.writeInt32(41, currentQtty_);
      }
      if (highestPrice_ != 0L) {
        output.writeInt64(42, highestPrice_);
      }
      if (lowestPrice_ != 0L) {
        output.writeInt64(43, lowestPrice_);
      }
      if (priorPrice_ != 0L) {
        output.writeInt64(44, priorPrice_);
      }
      if (matchValue_ != 0D) {
        output.writeDouble(45, matchValue_);
      }
      if (offerCount_ != 0) {
        output.writeInt32(46, offerCount_);
      }
      if (bidCount_ != 0) {
        output.writeInt32(47, bidCount_);
      }
      if (nmTotalTradedQtty_ != 0D) {
        output.writeDouble(48, nmTotalTradedQtty_);
      }
      if (nmTotalTradedValue_ != 0D) {
        output.writeDouble(49, nmTotalTradedValue_);
      }
      if (ptMatchQtty_ != 0D) {
        output.writeDouble(50, ptMatchQtty_);
      }
      if (ptMatchPrice_ != 0L) {
        output.writeInt64(51, ptMatchPrice_);
      }
      if (ptTotalTradedQtty_ != 0D) {
        output.writeDouble(52, ptTotalTradedQtty_);
      }
      if (ptTotalTradedValue_ != 0D) {
        output.writeDouble(53, ptTotalTradedValue_);
      }
      if (totalBuyTradingQtty_ != 0D) {
        output.writeDouble(54, totalBuyTradingQtty_);
      }
      if (buyCount_ != 0) {
        output.writeInt32(55, buyCount_);
      }
      if (totalBuyTradingValue_ != 0D) {
        output.writeDouble(56, totalBuyTradingValue_);
      }
      if (totalSellTradingQtty_ != 0D) {
        output.writeDouble(57, totalSellTradingQtty_);
      }
      if (sellCount_ != 0) {
        output.writeInt32(58, sellCount_);
      }
      if (totalSellTradingValue_ != 0D) {
        output.writeDouble(59, totalSellTradingValue_);
      }
      if (buyForeignQtty_ != 0D) {
        output.writeDouble(60, buyForeignQtty_);
      }
      if (buyForeignValue_ != 0D) {
        output.writeDouble(61, buyForeignValue_);
      }
      if (sellForeignQtty_ != 0D) {
        output.writeDouble(62, sellForeignQtty_);
      }
      if (sellForeignValue_ != 0D) {
        output.writeDouble(63, sellForeignValue_);
      }
      if (remainForeignQtty_ != 0) {
        output.writeInt32(64, remainForeignQtty_);
      }
      if (totalBidQttyOd_ != 0D) {
        output.writeDouble(65, totalBidQttyOd_);
      }
      if (totalOfferQttyOd_ != 0D) {
        output.writeDouble(66, totalOfferQttyOd_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSenderCompIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, senderCompId_);
      }
      if (!getSymbolBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, symbol_);
      }
      if (symbolId_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, symbolId_);
      }
      if (!getBoardCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, boardCode_);
      }
      if (!getTradingSessionIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, tradingSessionId_);
      }
      if (!getTradSesStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, tradSesStatus_);
      }
      if (securityTradingStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, securityTradingStatus_);
      }
      if (listingStatus_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, listingStatus_);
      }
      if (!getSecurityTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, securityType_);
      }
      if (!getIssueDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, issueDate_);
      }
      if (!getIssuerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, issuer_);
      }
      if (!getSecurityDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, securityDesc_);
      }
      if (bestBidPrice_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, bestBidPrice_);
      }
      if (bestBidQtty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, bestBidQtty_);
      }
      if (bestOfferPrice_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, bestOfferPrice_);
      }
      if (bestOfferQtty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, bestOfferQtty_);
      }
      if (totalBidQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, totalBidQtty_);
      }
      if (totalOfferQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, totalOfferQtty_);
      }
      if (basicPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, basicPrice_);
      }
      if (floorPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, floorPrice_);
      }
      if (ceilingPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, ceilingPrice_);
      }
      if (floorPricePt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, floorPricePt_);
      }
      if (ceilingPricePt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, ceilingPricePt_);
      }
      if (parValue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, parValue_);
      }
      if (matchPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, matchPrice_);
      }
      if (matchQtty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, matchQtty_);
      }
      if (openPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(27, openPrice_);
      }
      if (priorOpenPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(28, priorOpenPrice_);
      }
      if (closePrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, closePrice_);
      }
      if (priorClosePrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(30, priorClosePrice_);
      }
      if (totalVolumeTraded_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(31, totalVolumeTraded_);
      }
      if (totalValueTraded_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(32, totalValueTraded_);
      }
      if (midPx_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, midPx_);
      }
      if (!getTradingDateBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(34, tradingDate_);
      }
      if (!getTimeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(35, time_);
      }
      if (tradingUnit_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(36, tradingUnit_);
      }
      if (totalListingQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(37, totalListingQtty_);
      }
      if (dateNo_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(38, dateNo_);
      }
      if (!getReferenceStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(39, referenceStatus_);
      }
      if (currentPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(40, currentPrice_);
      }
      if (currentQtty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(41, currentQtty_);
      }
      if (highestPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(42, highestPrice_);
      }
      if (lowestPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(43, lowestPrice_);
      }
      if (priorPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(44, priorPrice_);
      }
      if (matchValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(45, matchValue_);
      }
      if (offerCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(46, offerCount_);
      }
      if (bidCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(47, bidCount_);
      }
      if (nmTotalTradedQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(48, nmTotalTradedQtty_);
      }
      if (nmTotalTradedValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(49, nmTotalTradedValue_);
      }
      if (ptMatchQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(50, ptMatchQtty_);
      }
      if (ptMatchPrice_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(51, ptMatchPrice_);
      }
      if (ptTotalTradedQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(52, ptTotalTradedQtty_);
      }
      if (ptTotalTradedValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(53, ptTotalTradedValue_);
      }
      if (totalBuyTradingQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(54, totalBuyTradingQtty_);
      }
      if (buyCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(55, buyCount_);
      }
      if (totalBuyTradingValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(56, totalBuyTradingValue_);
      }
      if (totalSellTradingQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(57, totalSellTradingQtty_);
      }
      if (sellCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(58, sellCount_);
      }
      if (totalSellTradingValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(59, totalSellTradingValue_);
      }
      if (buyForeignQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(60, buyForeignQtty_);
      }
      if (buyForeignValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(61, buyForeignValue_);
      }
      if (sellForeignQtty_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(62, sellForeignQtty_);
      }
      if (sellForeignValue_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(63, sellForeignValue_);
      }
      if (remainForeignQtty_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(64, remainForeignQtty_);
      }
      if (totalBidQttyOd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(65, totalBidQttyOd_);
      }
      if (totalOfferQttyOd_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(66, totalOfferQttyOd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.example.proto.ReadData.StockInfo)) {
        return super.equals(obj);
      }
      com.example.proto.ReadData.StockInfo other = (com.example.proto.ReadData.StockInfo) obj;

      if (!getSenderCompId()
          .equals(other.getSenderCompId())) return false;
      if (!getSymbol()
          .equals(other.getSymbol())) return false;
      if (java.lang.Double.doubleToLongBits(getSymbolId())
          != java.lang.Double.doubleToLongBits(
              other.getSymbolId())) return false;
      if (!getBoardCode()
          .equals(other.getBoardCode())) return false;
      if (!getTradingSessionId()
          .equals(other.getTradingSessionId())) return false;
      if (!getTradSesStatus()
          .equals(other.getTradSesStatus())) return false;
      if (getSecurityTradingStatus()
          != other.getSecurityTradingStatus()) return false;
      if (getListingStatus()
          != other.getListingStatus()) return false;
      if (!getSecurityType()
          .equals(other.getSecurityType())) return false;
      if (!getIssueDate()
          .equals(other.getIssueDate())) return false;
      if (!getIssuer()
          .equals(other.getIssuer())) return false;
      if (!getSecurityDesc()
          .equals(other.getSecurityDesc())) return false;
      if (getBestBidPrice()
          != other.getBestBidPrice()) return false;
      if (getBestBidQtty()
          != other.getBestBidQtty()) return false;
      if (getBestOfferPrice()
          != other.getBestOfferPrice()) return false;
      if (getBestOfferQtty()
          != other.getBestOfferQtty()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalBidQtty())
          != java.lang.Double.doubleToLongBits(
              other.getTotalBidQtty())) return false;
      if (java.lang.Double.doubleToLongBits(getTotalOfferQtty())
          != java.lang.Double.doubleToLongBits(
              other.getTotalOfferQtty())) return false;
      if (getBasicPrice()
          != other.getBasicPrice()) return false;
      if (getFloorPrice()
          != other.getFloorPrice()) return false;
      if (getCeilingPrice()
          != other.getCeilingPrice()) return false;
      if (getFloorPricePt()
          != other.getFloorPricePt()) return false;
      if (getCeilingPricePt()
          != other.getCeilingPricePt()) return false;
      if (getParValue()
          != other.getParValue()) return false;
      if (getMatchPrice()
          != other.getMatchPrice()) return false;
      if (getMatchQtty()
          != other.getMatchQtty()) return false;
      if (getOpenPrice()
          != other.getOpenPrice()) return false;
      if (getPriorOpenPrice()
          != other.getPriorOpenPrice()) return false;
      if (getClosePrice()
          != other.getClosePrice()) return false;
      if (getPriorClosePrice()
          != other.getPriorClosePrice()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalVolumeTraded())
          != java.lang.Double.doubleToLongBits(
              other.getTotalVolumeTraded())) return false;
      if (java.lang.Double.doubleToLongBits(getTotalValueTraded())
          != java.lang.Double.doubleToLongBits(
              other.getTotalValueTraded())) return false;
      if (getMidPx()
          != other.getMidPx()) return false;
      if (!getTradingDate()
          .equals(other.getTradingDate())) return false;
      if (!getTime()
          .equals(other.getTime())) return false;
      if (getTradingUnit()
          != other.getTradingUnit()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalListingQtty())
          != java.lang.Double.doubleToLongBits(
              other.getTotalListingQtty())) return false;
      if (getDateNo()
          != other.getDateNo()) return false;
      if (!getReferenceStatus()
          .equals(other.getReferenceStatus())) return false;
      if (getCurrentPrice()
          != other.getCurrentPrice()) return false;
      if (getCurrentQtty()
          != other.getCurrentQtty()) return false;
      if (getHighestPrice()
          != other.getHighestPrice()) return false;
      if (getLowestPrice()
          != other.getLowestPrice()) return false;
      if (getPriorPrice()
          != other.getPriorPrice()) return false;
      if (java.lang.Double.doubleToLongBits(getMatchValue())
          != java.lang.Double.doubleToLongBits(
              other.getMatchValue())) return false;
      if (getOfferCount()
          != other.getOfferCount()) return false;
      if (getBidCount()
          != other.getBidCount()) return false;
      if (java.lang.Double.doubleToLongBits(getNmTotalTradedQtty())
          != java.lang.Double.doubleToLongBits(
              other.getNmTotalTradedQtty())) return false;
      if (java.lang.Double.doubleToLongBits(getNmTotalTradedValue())
          != java.lang.Double.doubleToLongBits(
              other.getNmTotalTradedValue())) return false;
      if (java.lang.Double.doubleToLongBits(getPtMatchQtty())
          != java.lang.Double.doubleToLongBits(
              other.getPtMatchQtty())) return false;
      if (getPtMatchPrice()
          != other.getPtMatchPrice()) return false;
      if (java.lang.Double.doubleToLongBits(getPtTotalTradedQtty())
          != java.lang.Double.doubleToLongBits(
              other.getPtTotalTradedQtty())) return false;
      if (java.lang.Double.doubleToLongBits(getPtTotalTradedValue())
          != java.lang.Double.doubleToLongBits(
              other.getPtTotalTradedValue())) return false;
      if (java.lang.Double.doubleToLongBits(getTotalBuyTradingQtty())
          != java.lang.Double.doubleToLongBits(
              other.getTotalBuyTradingQtty())) return false;
      if (getBuyCount()
          != other.getBuyCount()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalBuyTradingValue())
          != java.lang.Double.doubleToLongBits(
              other.getTotalBuyTradingValue())) return false;
      if (java.lang.Double.doubleToLongBits(getTotalSellTradingQtty())
          != java.lang.Double.doubleToLongBits(
              other.getTotalSellTradingQtty())) return false;
      if (getSellCount()
          != other.getSellCount()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalSellTradingValue())
          != java.lang.Double.doubleToLongBits(
              other.getTotalSellTradingValue())) return false;
      if (java.lang.Double.doubleToLongBits(getBuyForeignQtty())
          != java.lang.Double.doubleToLongBits(
              other.getBuyForeignQtty())) return false;
      if (java.lang.Double.doubleToLongBits(getBuyForeignValue())
          != java.lang.Double.doubleToLongBits(
              other.getBuyForeignValue())) return false;
      if (java.lang.Double.doubleToLongBits(getSellForeignQtty())
          != java.lang.Double.doubleToLongBits(
              other.getSellForeignQtty())) return false;
      if (java.lang.Double.doubleToLongBits(getSellForeignValue())
          != java.lang.Double.doubleToLongBits(
              other.getSellForeignValue())) return false;
      if (getRemainForeignQtty()
          != other.getRemainForeignQtty()) return false;
      if (java.lang.Double.doubleToLongBits(getTotalBidQttyOd())
          != java.lang.Double.doubleToLongBits(
              other.getTotalBidQttyOd())) return false;
      if (java.lang.Double.doubleToLongBits(getTotalOfferQttyOd())
          != java.lang.Double.doubleToLongBits(
              other.getTotalOfferQttyOd())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SENDER_COMP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSenderCompId().hashCode();
      hash = (37 * hash) + SYMBOL_FIELD_NUMBER;
      hash = (53 * hash) + getSymbol().hashCode();
      hash = (37 * hash) + SYMBOL_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSymbolId()));
      hash = (37 * hash) + BOARD_CODE_FIELD_NUMBER;
      hash = (53 * hash) + getBoardCode().hashCode();
      hash = (37 * hash) + TRADING_SESSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTradingSessionId().hashCode();
      hash = (37 * hash) + TRAD_SES_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getTradSesStatus().hashCode();
      hash = (37 * hash) + SECURITY_TRADING_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityTradingStatus();
      hash = (37 * hash) + LISTING_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getListingStatus();
      hash = (37 * hash) + SECURITY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityType().hashCode();
      hash = (37 * hash) + ISSUE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getIssueDate().hashCode();
      hash = (37 * hash) + ISSUER_FIELD_NUMBER;
      hash = (53 * hash) + getIssuer().hashCode();
      hash = (37 * hash) + SECURITY_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getSecurityDesc().hashCode();
      hash = (37 * hash) + BEST_BID_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getBestBidPrice();
      hash = (37 * hash) + BEST_BID_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + getBestBidQtty();
      hash = (37 * hash) + BEST_OFFER_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + getBestOfferPrice();
      hash = (37 * hash) + BEST_OFFER_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + getBestOfferQtty();
      hash = (37 * hash) + TOTAL_BID_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalBidQtty()));
      hash = (37 * hash) + TOTAL_OFFER_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalOfferQtty()));
      hash = (37 * hash) + BASIC_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBasicPrice());
      hash = (37 * hash) + FLOOR_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFloorPrice());
      hash = (37 * hash) + CEILING_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCeilingPrice());
      hash = (37 * hash) + FLOOR_PRICE_PT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFloorPricePt());
      hash = (37 * hash) + CEILING_PRICE_PT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCeilingPricePt());
      hash = (37 * hash) + PAR_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + getParValue();
      hash = (37 * hash) + MATCH_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMatchPrice());
      hash = (37 * hash) + MATCH_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + getMatchQtty();
      hash = (37 * hash) + OPEN_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOpenPrice());
      hash = (37 * hash) + PRIOR_OPEN_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPriorOpenPrice());
      hash = (37 * hash) + CLOSE_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getClosePrice());
      hash = (37 * hash) + PRIOR_CLOSE_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPriorClosePrice());
      hash = (37 * hash) + TOTAL_VOLUME_TRADED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalVolumeTraded()));
      hash = (37 * hash) + TOTAL_VALUE_TRADED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalValueTraded()));
      hash = (37 * hash) + MID_PX_FIELD_NUMBER;
      hash = (53 * hash) + getMidPx();
      hash = (37 * hash) + TRADING_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getTradingDate().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime().hashCode();
      hash = (37 * hash) + TRADING_UNIT_FIELD_NUMBER;
      hash = (53 * hash) + getTradingUnit();
      hash = (37 * hash) + TOTAL_LISTING_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalListingQtty()));
      hash = (37 * hash) + DATE_NO_FIELD_NUMBER;
      hash = (53 * hash) + getDateNo();
      hash = (37 * hash) + REFERENCE_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + getReferenceStatus().hashCode();
      hash = (37 * hash) + CURRENT_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCurrentPrice());
      hash = (37 * hash) + CURRENT_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + getCurrentQtty();
      hash = (37 * hash) + HIGHEST_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHighestPrice());
      hash = (37 * hash) + LOWEST_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLowestPrice());
      hash = (37 * hash) + PRIOR_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPriorPrice());
      hash = (37 * hash) + MATCH_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getMatchValue()));
      hash = (37 * hash) + OFFER_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getOfferCount();
      hash = (37 * hash) + BID_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getBidCount();
      hash = (37 * hash) + NM_TOTAL_TRADED_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNmTotalTradedQtty()));
      hash = (37 * hash) + NM_TOTAL_TRADED_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getNmTotalTradedValue()));
      hash = (37 * hash) + PT_MATCH_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPtMatchQtty()));
      hash = (37 * hash) + PT_MATCH_PRICE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPtMatchPrice());
      hash = (37 * hash) + PT_TOTAL_TRADED_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPtTotalTradedQtty()));
      hash = (37 * hash) + PT_TOTAL_TRADED_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getPtTotalTradedValue()));
      hash = (37 * hash) + TOTAL_BUY_TRADING_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalBuyTradingQtty()));
      hash = (37 * hash) + BUY_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getBuyCount();
      hash = (37 * hash) + TOTAL_BUY_TRADING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalBuyTradingValue()));
      hash = (37 * hash) + TOTAL_SELL_TRADING_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalSellTradingQtty()));
      hash = (37 * hash) + SELL_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getSellCount();
      hash = (37 * hash) + TOTAL_SELL_TRADING_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalSellTradingValue()));
      hash = (37 * hash) + BUY_FOREIGN_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBuyForeignQtty()));
      hash = (37 * hash) + BUY_FOREIGN_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBuyForeignValue()));
      hash = (37 * hash) + SELL_FOREIGN_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSellForeignQtty()));
      hash = (37 * hash) + SELL_FOREIGN_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSellForeignValue()));
      hash = (37 * hash) + REMAIN_FOREIGN_QTTY_FIELD_NUMBER;
      hash = (53 * hash) + getRemainForeignQtty();
      hash = (37 * hash) + TOTAL_BID_QTTY_OD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalBidQttyOd()));
      hash = (37 * hash) + TOTAL_OFFER_QTTY_OD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTotalOfferQttyOd()));
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.example.proto.ReadData.StockInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.example.proto.ReadData.StockInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.example.proto.ReadData.StockInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.example.proto.ReadData.StockInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.proto.ReadData.StockInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code StockInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:StockInfo)
        com.example.proto.ReadData.StockInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.example.proto.ReadData.internal_static_StockInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.example.proto.ReadData.internal_static_StockInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.example.proto.ReadData.StockInfo.class, com.example.proto.ReadData.StockInfo.Builder.class);
      }

      // Construct using com.example.proto.ReadData.StockInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        senderCompId_ = "";

        symbol_ = "";

        symbolId_ = 0D;

        boardCode_ = "";

        tradingSessionId_ = "";

        tradSesStatus_ = "";

        securityTradingStatus_ = 0;

        listingStatus_ = 0;

        securityType_ = "";

        issueDate_ = "";

        issuer_ = "";

        securityDesc_ = "";

        bestBidPrice_ = 0;

        bestBidQtty_ = 0;

        bestOfferPrice_ = 0;

        bestOfferQtty_ = 0;

        totalBidQtty_ = 0D;

        totalOfferQtty_ = 0D;

        basicPrice_ = 0L;

        floorPrice_ = 0L;

        ceilingPrice_ = 0L;

        floorPricePt_ = 0L;

        ceilingPricePt_ = 0L;

        parValue_ = 0;

        matchPrice_ = 0L;

        matchQtty_ = 0;

        openPrice_ = 0L;

        priorOpenPrice_ = 0L;

        closePrice_ = 0L;

        priorClosePrice_ = 0L;

        totalVolumeTraded_ = 0D;

        totalValueTraded_ = 0D;

        midPx_ = 0;

        tradingDate_ = "";

        time_ = "";

        tradingUnit_ = 0;

        totalListingQtty_ = 0D;

        dateNo_ = 0;

        referenceStatus_ = "";

        currentPrice_ = 0L;

        currentQtty_ = 0;

        highestPrice_ = 0L;

        lowestPrice_ = 0L;

        priorPrice_ = 0L;

        matchValue_ = 0D;

        offerCount_ = 0;

        bidCount_ = 0;

        nmTotalTradedQtty_ = 0D;

        nmTotalTradedValue_ = 0D;

        ptMatchQtty_ = 0D;

        ptMatchPrice_ = 0L;

        ptTotalTradedQtty_ = 0D;

        ptTotalTradedValue_ = 0D;

        totalBuyTradingQtty_ = 0D;

        buyCount_ = 0;

        totalBuyTradingValue_ = 0D;

        totalSellTradingQtty_ = 0D;

        sellCount_ = 0;

        totalSellTradingValue_ = 0D;

        buyForeignQtty_ = 0D;

        buyForeignValue_ = 0D;

        sellForeignQtty_ = 0D;

        sellForeignValue_ = 0D;

        remainForeignQtty_ = 0;

        totalBidQttyOd_ = 0D;

        totalOfferQttyOd_ = 0D;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.example.proto.ReadData.internal_static_StockInfo_descriptor;
      }

      @java.lang.Override
      public com.example.proto.ReadData.StockInfo getDefaultInstanceForType() {
        return com.example.proto.ReadData.StockInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.example.proto.ReadData.StockInfo build() {
        com.example.proto.ReadData.StockInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.example.proto.ReadData.StockInfo buildPartial() {
        com.example.proto.ReadData.StockInfo result = new com.example.proto.ReadData.StockInfo(this);
        result.senderCompId_ = senderCompId_;
        result.symbol_ = symbol_;
        result.symbolId_ = symbolId_;
        result.boardCode_ = boardCode_;
        result.tradingSessionId_ = tradingSessionId_;
        result.tradSesStatus_ = tradSesStatus_;
        result.securityTradingStatus_ = securityTradingStatus_;
        result.listingStatus_ = listingStatus_;
        result.securityType_ = securityType_;
        result.issueDate_ = issueDate_;
        result.issuer_ = issuer_;
        result.securityDesc_ = securityDesc_;
        result.bestBidPrice_ = bestBidPrice_;
        result.bestBidQtty_ = bestBidQtty_;
        result.bestOfferPrice_ = bestOfferPrice_;
        result.bestOfferQtty_ = bestOfferQtty_;
        result.totalBidQtty_ = totalBidQtty_;
        result.totalOfferQtty_ = totalOfferQtty_;
        result.basicPrice_ = basicPrice_;
        result.floorPrice_ = floorPrice_;
        result.ceilingPrice_ = ceilingPrice_;
        result.floorPricePt_ = floorPricePt_;
        result.ceilingPricePt_ = ceilingPricePt_;
        result.parValue_ = parValue_;
        result.matchPrice_ = matchPrice_;
        result.matchQtty_ = matchQtty_;
        result.openPrice_ = openPrice_;
        result.priorOpenPrice_ = priorOpenPrice_;
        result.closePrice_ = closePrice_;
        result.priorClosePrice_ = priorClosePrice_;
        result.totalVolumeTraded_ = totalVolumeTraded_;
        result.totalValueTraded_ = totalValueTraded_;
        result.midPx_ = midPx_;
        result.tradingDate_ = tradingDate_;
        result.time_ = time_;
        result.tradingUnit_ = tradingUnit_;
        result.totalListingQtty_ = totalListingQtty_;
        result.dateNo_ = dateNo_;
        result.referenceStatus_ = referenceStatus_;
        result.currentPrice_ = currentPrice_;
        result.currentQtty_ = currentQtty_;
        result.highestPrice_ = highestPrice_;
        result.lowestPrice_ = lowestPrice_;
        result.priorPrice_ = priorPrice_;
        result.matchValue_ = matchValue_;
        result.offerCount_ = offerCount_;
        result.bidCount_ = bidCount_;
        result.nmTotalTradedQtty_ = nmTotalTradedQtty_;
        result.nmTotalTradedValue_ = nmTotalTradedValue_;
        result.ptMatchQtty_ = ptMatchQtty_;
        result.ptMatchPrice_ = ptMatchPrice_;
        result.ptTotalTradedQtty_ = ptTotalTradedQtty_;
        result.ptTotalTradedValue_ = ptTotalTradedValue_;
        result.totalBuyTradingQtty_ = totalBuyTradingQtty_;
        result.buyCount_ = buyCount_;
        result.totalBuyTradingValue_ = totalBuyTradingValue_;
        result.totalSellTradingQtty_ = totalSellTradingQtty_;
        result.sellCount_ = sellCount_;
        result.totalSellTradingValue_ = totalSellTradingValue_;
        result.buyForeignQtty_ = buyForeignQtty_;
        result.buyForeignValue_ = buyForeignValue_;
        result.sellForeignQtty_ = sellForeignQtty_;
        result.sellForeignValue_ = sellForeignValue_;
        result.remainForeignQtty_ = remainForeignQtty_;
        result.totalBidQttyOd_ = totalBidQttyOd_;
        result.totalOfferQttyOd_ = totalOfferQttyOd_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.example.proto.ReadData.StockInfo) {
          return mergeFrom((com.example.proto.ReadData.StockInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.example.proto.ReadData.StockInfo other) {
        if (other == com.example.proto.ReadData.StockInfo.getDefaultInstance()) return this;
        if (!other.getSenderCompId().isEmpty()) {
          senderCompId_ = other.senderCompId_;
          onChanged();
        }
        if (!other.getSymbol().isEmpty()) {
          symbol_ = other.symbol_;
          onChanged();
        }
        if (other.getSymbolId() != 0D) {
          setSymbolId(other.getSymbolId());
        }
        if (!other.getBoardCode().isEmpty()) {
          boardCode_ = other.boardCode_;
          onChanged();
        }
        if (!other.getTradingSessionId().isEmpty()) {
          tradingSessionId_ = other.tradingSessionId_;
          onChanged();
        }
        if (!other.getTradSesStatus().isEmpty()) {
          tradSesStatus_ = other.tradSesStatus_;
          onChanged();
        }
        if (other.getSecurityTradingStatus() != 0) {
          setSecurityTradingStatus(other.getSecurityTradingStatus());
        }
        if (other.getListingStatus() != 0) {
          setListingStatus(other.getListingStatus());
        }
        if (!other.getSecurityType().isEmpty()) {
          securityType_ = other.securityType_;
          onChanged();
        }
        if (!other.getIssueDate().isEmpty()) {
          issueDate_ = other.issueDate_;
          onChanged();
        }
        if (!other.getIssuer().isEmpty()) {
          issuer_ = other.issuer_;
          onChanged();
        }
        if (!other.getSecurityDesc().isEmpty()) {
          securityDesc_ = other.securityDesc_;
          onChanged();
        }
        if (other.getBestBidPrice() != 0) {
          setBestBidPrice(other.getBestBidPrice());
        }
        if (other.getBestBidQtty() != 0) {
          setBestBidQtty(other.getBestBidQtty());
        }
        if (other.getBestOfferPrice() != 0) {
          setBestOfferPrice(other.getBestOfferPrice());
        }
        if (other.getBestOfferQtty() != 0) {
          setBestOfferQtty(other.getBestOfferQtty());
        }
        if (other.getTotalBidQtty() != 0D) {
          setTotalBidQtty(other.getTotalBidQtty());
        }
        if (other.getTotalOfferQtty() != 0D) {
          setTotalOfferQtty(other.getTotalOfferQtty());
        }
        if (other.getBasicPrice() != 0L) {
          setBasicPrice(other.getBasicPrice());
        }
        if (other.getFloorPrice() != 0L) {
          setFloorPrice(other.getFloorPrice());
        }
        if (other.getCeilingPrice() != 0L) {
          setCeilingPrice(other.getCeilingPrice());
        }
        if (other.getFloorPricePt() != 0L) {
          setFloorPricePt(other.getFloorPricePt());
        }
        if (other.getCeilingPricePt() != 0L) {
          setCeilingPricePt(other.getCeilingPricePt());
        }
        if (other.getParValue() != 0) {
          setParValue(other.getParValue());
        }
        if (other.getMatchPrice() != 0L) {
          setMatchPrice(other.getMatchPrice());
        }
        if (other.getMatchQtty() != 0) {
          setMatchQtty(other.getMatchQtty());
        }
        if (other.getOpenPrice() != 0L) {
          setOpenPrice(other.getOpenPrice());
        }
        if (other.getPriorOpenPrice() != 0L) {
          setPriorOpenPrice(other.getPriorOpenPrice());
        }
        if (other.getClosePrice() != 0L) {
          setClosePrice(other.getClosePrice());
        }
        if (other.getPriorClosePrice() != 0L) {
          setPriorClosePrice(other.getPriorClosePrice());
        }
        if (other.getTotalVolumeTraded() != 0D) {
          setTotalVolumeTraded(other.getTotalVolumeTraded());
        }
        if (other.getTotalValueTraded() != 0D) {
          setTotalValueTraded(other.getTotalValueTraded());
        }
        if (other.getMidPx() != 0) {
          setMidPx(other.getMidPx());
        }
        if (!other.getTradingDate().isEmpty()) {
          tradingDate_ = other.tradingDate_;
          onChanged();
        }
        if (!other.getTime().isEmpty()) {
          time_ = other.time_;
          onChanged();
        }
        if (other.getTradingUnit() != 0) {
          setTradingUnit(other.getTradingUnit());
        }
        if (other.getTotalListingQtty() != 0D) {
          setTotalListingQtty(other.getTotalListingQtty());
        }
        if (other.getDateNo() != 0) {
          setDateNo(other.getDateNo());
        }
        if (!other.getReferenceStatus().isEmpty()) {
          referenceStatus_ = other.referenceStatus_;
          onChanged();
        }
        if (other.getCurrentPrice() != 0L) {
          setCurrentPrice(other.getCurrentPrice());
        }
        if (other.getCurrentQtty() != 0) {
          setCurrentQtty(other.getCurrentQtty());
        }
        if (other.getHighestPrice() != 0L) {
          setHighestPrice(other.getHighestPrice());
        }
        if (other.getLowestPrice() != 0L) {
          setLowestPrice(other.getLowestPrice());
        }
        if (other.getPriorPrice() != 0L) {
          setPriorPrice(other.getPriorPrice());
        }
        if (other.getMatchValue() != 0D) {
          setMatchValue(other.getMatchValue());
        }
        if (other.getOfferCount() != 0) {
          setOfferCount(other.getOfferCount());
        }
        if (other.getBidCount() != 0) {
          setBidCount(other.getBidCount());
        }
        if (other.getNmTotalTradedQtty() != 0D) {
          setNmTotalTradedQtty(other.getNmTotalTradedQtty());
        }
        if (other.getNmTotalTradedValue() != 0D) {
          setNmTotalTradedValue(other.getNmTotalTradedValue());
        }
        if (other.getPtMatchQtty() != 0D) {
          setPtMatchQtty(other.getPtMatchQtty());
        }
        if (other.getPtMatchPrice() != 0L) {
          setPtMatchPrice(other.getPtMatchPrice());
        }
        if (other.getPtTotalTradedQtty() != 0D) {
          setPtTotalTradedQtty(other.getPtTotalTradedQtty());
        }
        if (other.getPtTotalTradedValue() != 0D) {
          setPtTotalTradedValue(other.getPtTotalTradedValue());
        }
        if (other.getTotalBuyTradingQtty() != 0D) {
          setTotalBuyTradingQtty(other.getTotalBuyTradingQtty());
        }
        if (other.getBuyCount() != 0) {
          setBuyCount(other.getBuyCount());
        }
        if (other.getTotalBuyTradingValue() != 0D) {
          setTotalBuyTradingValue(other.getTotalBuyTradingValue());
        }
        if (other.getTotalSellTradingQtty() != 0D) {
          setTotalSellTradingQtty(other.getTotalSellTradingQtty());
        }
        if (other.getSellCount() != 0) {
          setSellCount(other.getSellCount());
        }
        if (other.getTotalSellTradingValue() != 0D) {
          setTotalSellTradingValue(other.getTotalSellTradingValue());
        }
        if (other.getBuyForeignQtty() != 0D) {
          setBuyForeignQtty(other.getBuyForeignQtty());
        }
        if (other.getBuyForeignValue() != 0D) {
          setBuyForeignValue(other.getBuyForeignValue());
        }
        if (other.getSellForeignQtty() != 0D) {
          setSellForeignQtty(other.getSellForeignQtty());
        }
        if (other.getSellForeignValue() != 0D) {
          setSellForeignValue(other.getSellForeignValue());
        }
        if (other.getRemainForeignQtty() != 0) {
          setRemainForeignQtty(other.getRemainForeignQtty());
        }
        if (other.getTotalBidQttyOd() != 0D) {
          setTotalBidQttyOd(other.getTotalBidQttyOd());
        }
        if (other.getTotalOfferQttyOd() != 0D) {
          setTotalOfferQttyOd(other.getTotalOfferQttyOd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.example.proto.ReadData.StockInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.example.proto.ReadData.StockInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object senderCompId_ = "";
      /**
       * <pre>
       *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
       * </pre>
       *
       * <code>string sender_comp_id = 1;</code>
       * @return The senderCompId.
       */
      public java.lang.String getSenderCompId() {
        java.lang.Object ref = senderCompId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          senderCompId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
       * </pre>
       *
       * <code>string sender_comp_id = 1;</code>
       * @return The bytes for senderCompId.
       */
      public com.google.protobuf.ByteString
          getSenderCompIdBytes() {
        java.lang.Object ref = senderCompId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          senderCompId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
       * </pre>
       *
       * <code>string sender_comp_id = 1;</code>
       * @param value The senderCompId to set.
       * @return This builder for chaining.
       */
      public Builder setSenderCompId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        senderCompId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
       * </pre>
       *
       * <code>string sender_comp_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSenderCompId() {
        
        senderCompId_ = getDefaultInstance().getSenderCompId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *ID người gửi. Nếu là message do HNX gửi thì giá trị là “HNX”
       * </pre>
       *
       * <code>string sender_comp_id = 1;</code>
       * @param value The bytes for senderCompId to set.
       * @return This builder for chaining.
       */
      public Builder setSenderCompIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        senderCompId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object symbol_ = "";
      /**
       * <pre>
       *Mã chứng khoán
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The symbol.
       */
      public java.lang.String getSymbol() {
        java.lang.Object ref = symbol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          symbol_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Mã chứng khoán
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return The bytes for symbol.
       */
      public com.google.protobuf.ByteString
          getSymbolBytes() {
        java.lang.Object ref = symbol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          symbol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Mã chứng khoán
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbol(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        symbol_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã chứng khoán
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbol() {
        
        symbol_ = getDefaultInstance().getSymbol();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã chứng khoán
       * </pre>
       *
       * <code>string symbol = 2;</code>
       * @param value The bytes for symbol to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        symbol_ = value;
        onChanged();
        return this;
      }

      private double symbolId_ ;
      /**
       * <pre>
       *Id chứng khoán
       * </pre>
       *
       * <code>double symbol_id = 3;</code>
       * @return The symbolId.
       */
      @java.lang.Override
      public double getSymbolId() {
        return symbolId_;
      }
      /**
       * <pre>
       *Id chứng khoán
       * </pre>
       *
       * <code>double symbol_id = 3;</code>
       * @param value The symbolId to set.
       * @return This builder for chaining.
       */
      public Builder setSymbolId(double value) {
        
        symbolId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Id chứng khoán
       * </pre>
       *
       * <code>double symbol_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSymbolId() {
        
        symbolId_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object boardCode_ = "";
      /**
       * <pre>
       *Mã bảng của chứng khoán
       * </pre>
       *
       * <code>string board_code = 4;</code>
       * @return The boardCode.
       */
      public java.lang.String getBoardCode() {
        java.lang.Object ref = boardCode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          boardCode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Mã bảng của chứng khoán
       * </pre>
       *
       * <code>string board_code = 4;</code>
       * @return The bytes for boardCode.
       */
      public com.google.protobuf.ByteString
          getBoardCodeBytes() {
        java.lang.Object ref = boardCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          boardCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Mã bảng của chứng khoán
       * </pre>
       *
       * <code>string board_code = 4;</code>
       * @param value The boardCode to set.
       * @return This builder for chaining.
       */
      public Builder setBoardCode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boardCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã bảng của chứng khoán
       * </pre>
       *
       * <code>string board_code = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardCode() {
        
        boardCode_ = getDefaultInstance().getBoardCode();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã bảng của chứng khoán
       * </pre>
       *
       * <code>string board_code = 4;</code>
       * @param value The bytes for boardCode to set.
       * @return This builder for chaining.
       */
      public Builder setBoardCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        boardCode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tradingSessionId_ = "";
      /**
       * <pre>
       *Mã trạng thái giao dịch
       * </pre>
       *
       * <code>string trading_session_id = 5;</code>
       * @return The tradingSessionId.
       */
      public java.lang.String getTradingSessionId() {
        java.lang.Object ref = tradingSessionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tradingSessionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Mã trạng thái giao dịch
       * </pre>
       *
       * <code>string trading_session_id = 5;</code>
       * @return The bytes for tradingSessionId.
       */
      public com.google.protobuf.ByteString
          getTradingSessionIdBytes() {
        java.lang.Object ref = tradingSessionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradingSessionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Mã trạng thái giao dịch
       * </pre>
       *
       * <code>string trading_session_id = 5;</code>
       * @param value The tradingSessionId to set.
       * @return This builder for chaining.
       */
      public Builder setTradingSessionId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tradingSessionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã trạng thái giao dịch
       * </pre>
       *
       * <code>string trading_session_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradingSessionId() {
        
        tradingSessionId_ = getDefaultInstance().getTradingSessionId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mã trạng thái giao dịch
       * </pre>
       *
       * <code>string trading_session_id = 5;</code>
       * @param value The bytes for tradingSessionId to set.
       * @return This builder for chaining.
       */
      public Builder setTradingSessionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tradingSessionId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tradSesStatus_ = "";
      /**
       * <pre>
       *Trạng thái giao dịch:
       *= 0 Chưa bắt đầu.
       *= 1 Bình thường
       *= 2 Tạm dừng
       *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
       *= 4 Tạm dừng do Circuit Break
       *= 5 Phiên định kỳ sau Circuit Break
       *= 6 Chứng khoán đang Prolong
       *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
       *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
       *= 97 Đóng cửa thị trường.
       * </pre>
       *
       * <code>string trad_ses_status = 6;</code>
       * @return The tradSesStatus.
       */
      public java.lang.String getTradSesStatus() {
        java.lang.Object ref = tradSesStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tradSesStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Trạng thái giao dịch:
       *= 0 Chưa bắt đầu.
       *= 1 Bình thường
       *= 2 Tạm dừng
       *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
       *= 4 Tạm dừng do Circuit Break
       *= 5 Phiên định kỳ sau Circuit Break
       *= 6 Chứng khoán đang Prolong
       *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
       *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
       *= 97 Đóng cửa thị trường.
       * </pre>
       *
       * <code>string trad_ses_status = 6;</code>
       * @return The bytes for tradSesStatus.
       */
      public com.google.protobuf.ByteString
          getTradSesStatusBytes() {
        java.lang.Object ref = tradSesStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradSesStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Trạng thái giao dịch:
       *= 0 Chưa bắt đầu.
       *= 1 Bình thường
       *= 2 Tạm dừng
       *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
       *= 4 Tạm dừng do Circuit Break
       *= 5 Phiên định kỳ sau Circuit Break
       *= 6 Chứng khoán đang Prolong
       *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
       *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
       *= 97 Đóng cửa thị trường.
       * </pre>
       *
       * <code>string trad_ses_status = 6;</code>
       * @param value The tradSesStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTradSesStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tradSesStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Trạng thái giao dịch:
       *= 0 Chưa bắt đầu.
       *= 1 Bình thường
       *= 2 Tạm dừng
       *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
       *= 4 Tạm dừng do Circuit Break
       *= 5 Phiên định kỳ sau Circuit Break
       *= 6 Chứng khoán đang Prolong
       *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
       *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
       *= 97 Đóng cửa thị trường.
       * </pre>
       *
       * <code>string trad_ses_status = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradSesStatus() {
        
        tradSesStatus_ = getDefaultInstance().getTradSesStatus();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Trạng thái giao dịch:
       *= 0 Chưa bắt đầu.
       *= 1 Bình thường
       *= 2 Tạm dừng
       *= 3 Kết thúc nhận lệnh phiên hiện tại do RamdomEnd
       *= 4 Tạm dừng do Circuit Break
       *= 5 Phiên định kỳ sau Circuit Break
       *= 6 Chứng khoán đang Prolong
       *= 13 Kết thúc nhận lệnh của ngày giao dịch hiện tại
       *= 90 Thị trường đang ở trạng thái chờ nhận lệnh.
       *= 97 Đóng cửa thị trường.
       * </pre>
       *
       * <code>string trad_ses_status = 6;</code>
       * @param value The bytes for tradSesStatus to set.
       * @return This builder for chaining.
       */
      public Builder setTradSesStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tradSesStatus_ = value;
        onChanged();
        return this;
      }

      private int securityTradingStatus_ ;
      /**
       * <pre>
       *Trạng thái chứng khoán:
       *= 0: Bình thường
       *= 1: Chứng khoán không được giao dịch trong ngày
       *= 2: Ngừng giao dịch
       *= 6: Hủy niêm yết
       *= 7: Niêm yết mới
       *= 8: Sắp hủy niêm yết
       *=10: Tạm ngừng giao dịch giữa phiên
       *= 25: Giao dịch đặc biệt
       * </pre>
       *
       * <code>int32 security_trading_status = 7;</code>
       * @return The securityTradingStatus.
       */
      @java.lang.Override
      public int getSecurityTradingStatus() {
        return securityTradingStatus_;
      }
      /**
       * <pre>
       *Trạng thái chứng khoán:
       *= 0: Bình thường
       *= 1: Chứng khoán không được giao dịch trong ngày
       *= 2: Ngừng giao dịch
       *= 6: Hủy niêm yết
       *= 7: Niêm yết mới
       *= 8: Sắp hủy niêm yết
       *=10: Tạm ngừng giao dịch giữa phiên
       *= 25: Giao dịch đặc biệt
       * </pre>
       *
       * <code>int32 security_trading_status = 7;</code>
       * @param value The securityTradingStatus to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityTradingStatus(int value) {
        
        securityTradingStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Trạng thái chứng khoán:
       *= 0: Bình thường
       *= 1: Chứng khoán không được giao dịch trong ngày
       *= 2: Ngừng giao dịch
       *= 6: Hủy niêm yết
       *= 7: Niêm yết mới
       *= 8: Sắp hủy niêm yết
       *=10: Tạm ngừng giao dịch giữa phiên
       *= 25: Giao dịch đặc biệt
       * </pre>
       *
       * <code>int32 security_trading_status = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityTradingStatus() {
        
        securityTradingStatus_ = 0;
        onChanged();
        return this;
      }

      private int listingStatus_ ;
      /**
       * <pre>
       *Tình trạng chứng khoán
       *=0: Bình thường
       *=2: Bị cảnh báo
       *=3: Bị kiểm soát
       * </pre>
       *
       * <code>int32 listing_status = 8;</code>
       * @return The listingStatus.
       */
      @java.lang.Override
      public int getListingStatus() {
        return listingStatus_;
      }
      /**
       * <pre>
       *Tình trạng chứng khoán
       *=0: Bình thường
       *=2: Bị cảnh báo
       *=3: Bị kiểm soát
       * </pre>
       *
       * <code>int32 listing_status = 8;</code>
       * @param value The listingStatus to set.
       * @return This builder for chaining.
       */
      public Builder setListingStatus(int value) {
        
        listingStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tình trạng chứng khoán
       *=0: Bình thường
       *=2: Bị cảnh báo
       *=3: Bị kiểm soát
       * </pre>
       *
       * <code>int32 listing_status = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearListingStatus() {
        
        listingStatus_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object securityType_ = "";
      /**
       * <pre>
       *Loại chứng khoán:
       *ST: Cổ phiếu
       *BO: Trái phiếu
       *MF: Chứng chỉ quỹ
       *EF: ETF
       *FU : Future
       *OP: Option
       * </pre>
       *
       * <code>string security_type = 9;</code>
       * @return The securityType.
       */
      public java.lang.String getSecurityType() {
        java.lang.Object ref = securityType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          securityType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Loại chứng khoán:
       *ST: Cổ phiếu
       *BO: Trái phiếu
       *MF: Chứng chỉ quỹ
       *EF: ETF
       *FU : Future
       *OP: Option
       * </pre>
       *
       * <code>string security_type = 9;</code>
       * @return The bytes for securityType.
       */
      public com.google.protobuf.ByteString
          getSecurityTypeBytes() {
        java.lang.Object ref = securityType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          securityType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Loại chứng khoán:
       *ST: Cổ phiếu
       *BO: Trái phiếu
       *MF: Chứng chỉ quỹ
       *EF: ETF
       *FU : Future
       *OP: Option
       * </pre>
       *
       * <code>string security_type = 9;</code>
       * @param value The securityType to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        securityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Loại chứng khoán:
       *ST: Cổ phiếu
       *BO: Trái phiếu
       *MF: Chứng chỉ quỹ
       *EF: ETF
       *FU : Future
       *OP: Option
       * </pre>
       *
       * <code>string security_type = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityType() {
        
        securityType_ = getDefaultInstance().getSecurityType();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Loại chứng khoán:
       *ST: Cổ phiếu
       *BO: Trái phiếu
       *MF: Chứng chỉ quỹ
       *EF: ETF
       *FU : Future
       *OP: Option
       * </pre>
       *
       * <code>string security_type = 9;</code>
       * @param value The bytes for securityType to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        securityType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object issueDate_ = "";
      /**
       * <pre>
       *Ngày phát hành theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string issue_date = 10;</code>
       * @return The issueDate.
       */
      public java.lang.String getIssueDate() {
        java.lang.Object ref = issueDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          issueDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Ngày phát hành theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string issue_date = 10;</code>
       * @return The bytes for issueDate.
       */
      public com.google.protobuf.ByteString
          getIssueDateBytes() {
        java.lang.Object ref = issueDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          issueDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Ngày phát hành theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string issue_date = 10;</code>
       * @param value The issueDate to set.
       * @return This builder for chaining.
       */
      public Builder setIssueDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        issueDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Ngày phát hành theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string issue_date = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIssueDate() {
        
        issueDate_ = getDefaultInstance().getIssueDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Ngày phát hành theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string issue_date = 10;</code>
       * @param value The bytes for issueDate to set.
       * @return This builder for chaining.
       */
      public Builder setIssueDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        issueDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object issuer_ = "";
      /**
       * <pre>
       *Tổ chức phát hành
       * </pre>
       *
       * <code>string issuer = 11;</code>
       * @return The issuer.
       */
      public java.lang.String getIssuer() {
        java.lang.Object ref = issuer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          issuer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Tổ chức phát hành
       * </pre>
       *
       * <code>string issuer = 11;</code>
       * @return The bytes for issuer.
       */
      public com.google.protobuf.ByteString
          getIssuerBytes() {
        java.lang.Object ref = issuer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          issuer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Tổ chức phát hành
       * </pre>
       *
       * <code>string issuer = 11;</code>
       * @param value The issuer to set.
       * @return This builder for chaining.
       */
      public Builder setIssuer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        issuer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổ chức phát hành
       * </pre>
       *
       * <code>string issuer = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIssuer() {
        
        issuer_ = getDefaultInstance().getIssuer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổ chức phát hành
       * </pre>
       *
       * <code>string issuer = 11;</code>
       * @param value The bytes for issuer to set.
       * @return This builder for chaining.
       */
      public Builder setIssuerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        issuer_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object securityDesc_ = "";
      /**
       * <pre>
       *Mô tả thêm về chứng khoán
       * </pre>
       *
       * <code>string security_desc = 12;</code>
       * @return The securityDesc.
       */
      public java.lang.String getSecurityDesc() {
        java.lang.Object ref = securityDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          securityDesc_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Mô tả thêm về chứng khoán
       * </pre>
       *
       * <code>string security_desc = 12;</code>
       * @return The bytes for securityDesc.
       */
      public com.google.protobuf.ByteString
          getSecurityDescBytes() {
        java.lang.Object ref = securityDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          securityDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Mô tả thêm về chứng khoán
       * </pre>
       *
       * <code>string security_desc = 12;</code>
       * @param value The securityDesc to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        securityDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mô tả thêm về chứng khoán
       * </pre>
       *
       * <code>string security_desc = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecurityDesc() {
        
        securityDesc_ = getDefaultInstance().getSecurityDesc();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mô tả thêm về chứng khoán
       * </pre>
       *
       * <code>string security_desc = 12;</code>
       * @param value The bytes for securityDesc to set.
       * @return This builder for chaining.
       */
      public Builder setSecurityDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        securityDesc_ = value;
        onChanged();
        return this;
      }

      private int bestBidPrice_ ;
      /**
       * <pre>
       *Giá đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_price = 13;</code>
       * @return The bestBidPrice.
       */
      @java.lang.Override
      public int getBestBidPrice() {
        return bestBidPrice_;
      }
      /**
       * <pre>
       *Giá đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_price = 13;</code>
       * @param value The bestBidPrice to set.
       * @return This builder for chaining.
       */
      public Builder setBestBidPrice(int value) {
        
        bestBidPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_price = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBestBidPrice() {
        
        bestBidPrice_ = 0;
        onChanged();
        return this;
      }

      private int bestBidQtty_ ;
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_qtty = 14;</code>
       * @return The bestBidQtty.
       */
      @java.lang.Override
      public int getBestBidQtty() {
        return bestBidQtty_;
      }
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_qtty = 14;</code>
       * @param value The bestBidQtty to set.
       * @return This builder for chaining.
       */
      public Builder setBestBidQtty(int value) {
        
        bestBidQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_bid_qtty = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearBestBidQtty() {
        
        bestBidQtty_ = 0;
        onChanged();
        return this;
      }

      private int bestOfferPrice_ ;
      /**
       * <pre>
       *Giá đặt bán tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_price = 15;</code>
       * @return The bestOfferPrice.
       */
      @java.lang.Override
      public int getBestOfferPrice() {
        return bestOfferPrice_;
      }
      /**
       * <pre>
       *Giá đặt bán tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_price = 15;</code>
       * @param value The bestOfferPrice to set.
       * @return This builder for chaining.
       */
      public Builder setBestOfferPrice(int value) {
        
        bestOfferPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá đặt bán tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_price = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearBestOfferPrice() {
        
        bestOfferPrice_ = 0;
        onChanged();
        return this;
      }

      private int bestOfferQtty_ ;
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_qtty = 16;</code>
       * @return The bestOfferQtty.
       */
      @java.lang.Override
      public int getBestOfferQtty() {
        return bestOfferQtty_;
      }
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_qtty = 16;</code>
       * @param value The bestOfferQtty to set.
       * @return This builder for chaining.
       */
      public Builder setBestOfferQtty(int value) {
        
        bestOfferQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Khối lượng đặt mua tốt nhất của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 best_offer_qtty = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearBestOfferQtty() {
        
        bestOfferQtty_ = 0;
        onChanged();
        return this;
      }

      private double totalBidQtty_ ;
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty = 17;</code>
       * @return The totalBidQtty.
       */
      @java.lang.Override
      public double getTotalBidQtty() {
        return totalBidQtty_;
      }
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty = 17;</code>
       * @param value The totalBidQtty to set.
       * @return This builder for chaining.
       */
      public Builder setTotalBidQtty(double value) {
        
        totalBidQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalBidQtty() {
        
        totalBidQtty_ = 0D;
        onChanged();
        return this;
      }

      private double totalOfferQtty_ ;
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_offer_qtty = 18;</code>
       * @return The totalOfferQtty.
       */
      @java.lang.Override
      public double getTotalOfferQtty() {
        return totalOfferQtty_;
      }
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_offer_qtty = 18;</code>
       * @param value The totalOfferQtty to set.
       * @return This builder for chaining.
       */
      public Builder setTotalOfferQtty(double value) {
        
        totalOfferQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô chẵn (trừ kl sửa, hủy)
       * </pre>
       *
       * <code>double total_offer_qtty = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalOfferQtty() {
        
        totalOfferQtty_ = 0D;
        onChanged();
        return this;
      }

      private long basicPrice_ ;
      /**
       * <pre>
       *Giá tham chiếu ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 basic_price = 19;</code>
       * @return The basicPrice.
       */
      @java.lang.Override
      public long getBasicPrice() {
        return basicPrice_;
      }
      /**
       * <pre>
       *Giá tham chiếu ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 basic_price = 19;</code>
       * @param value The basicPrice to set.
       * @return This builder for chaining.
       */
      public Builder setBasicPrice(long value) {
        
        basicPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá tham chiếu ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 basic_price = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearBasicPrice() {
        
        basicPrice_ = 0L;
        onChanged();
        return this;
      }

      private long floorPrice_ ;
      /**
       * <pre>
       *Giá sàn ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price = 20;</code>
       * @return The floorPrice.
       */
      @java.lang.Override
      public long getFloorPrice() {
        return floorPrice_;
      }
      /**
       * <pre>
       *Giá sàn ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price = 20;</code>
       * @param value The floorPrice to set.
       * @return This builder for chaining.
       */
      public Builder setFloorPrice(long value) {
        
        floorPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá sàn ( nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloorPrice() {
        
        floorPrice_ = 0L;
        onChanged();
        return this;
      }

      private long ceilingPrice_ ;
      /**
       * <pre>
       *Giá trần ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 ceiling_price = 21;</code>
       * @return The ceilingPrice.
       */
      @java.lang.Override
      public long getCeilingPrice() {
        return ceilingPrice_;
      }
      /**
       * <pre>
       *Giá trần ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 ceiling_price = 21;</code>
       * @param value The ceilingPrice to set.
       * @return This builder for chaining.
       */
      public Builder setCeilingPrice(long value) {
        
        ceilingPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá trần ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 ceiling_price = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearCeilingPrice() {
        
        ceilingPrice_ = 0L;
        onChanged();
        return this;
      }

      private long floorPricePt_ ;
      /**
       * <pre>
       *Giá sàn cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price_pt = 22;</code>
       * @return The floorPricePt.
       */
      @java.lang.Override
      public long getFloorPricePt() {
        return floorPricePt_;
      }
      /**
       * <pre>
       *Giá sàn cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price_pt = 22;</code>
       * @param value The floorPricePt to set.
       * @return This builder for chaining.
       */
      public Builder setFloorPricePt(long value) {
        
        floorPricePt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá sàn cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 floor_price_pt = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloorPricePt() {
        
        floorPricePt_ = 0L;
        onChanged();
        return this;
      }

      private long ceilingPricePt_ ;
      /**
       * <pre>
       *Giá trần cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 ceiling_price_pt = 23;</code>
       * @return The ceilingPricePt.
       */
      @java.lang.Override
      public long getCeilingPricePt() {
        return ceilingPricePt_;
      }
      /**
       * <pre>
       *Giá trần cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 ceiling_price_pt = 23;</code>
       * @param value The ceilingPricePt to set.
       * @return This builder for chaining.
       */
      public Builder setCeilingPricePt(long value) {
        
        ceilingPricePt_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá trần cho giao dịch thỏa thuận ngoài biên độ (nghiệp vụ)
       * </pre>
       *
       * <code>int64 ceiling_price_pt = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearCeilingPricePt() {
        
        ceilingPricePt_ = 0L;
        onChanged();
        return this;
      }

      private int parValue_ ;
      /**
       * <pre>
       *Mệnh giá chứng khoán
       * </pre>
       *
       * <code>int32 par_value = 24;</code>
       * @return The parValue.
       */
      @java.lang.Override
      public int getParValue() {
        return parValue_;
      }
      /**
       * <pre>
       *Mệnh giá chứng khoán
       * </pre>
       *
       * <code>int32 par_value = 24;</code>
       * @param value The parValue to set.
       * @return This builder for chaining.
       */
      public Builder setParValue(int value) {
        
        parValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Mệnh giá chứng khoán
       * </pre>
       *
       * <code>int32 par_value = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearParValue() {
        
        parValue_ = 0;
        onChanged();
        return this;
      }

      private long matchPrice_ ;
      /**
       * <pre>
       *Giá khớp gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int64 match_price = 25;</code>
       * @return The matchPrice.
       */
      @java.lang.Override
      public long getMatchPrice() {
        return matchPrice_;
      }
      /**
       * <pre>
       *Giá khớp gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int64 match_price = 25;</code>
       * @param value The matchPrice to set.
       * @return This builder for chaining.
       */
      public Builder setMatchPrice(long value) {
        
        matchPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá khớp gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int64 match_price = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchPrice() {
        
        matchPrice_ = 0L;
        onChanged();
        return this;
      }

      private int matchQtty_ ;
      /**
       * <pre>
       *KL khớp gần của GD khớp lệnh lô chăn
       * </pre>
       *
       * <code>int32 match_qtty = 26;</code>
       * @return The matchQtty.
       */
      @java.lang.Override
      public int getMatchQtty() {
        return matchQtty_;
      }
      /**
       * <pre>
       *KL khớp gần của GD khớp lệnh lô chăn
       * </pre>
       *
       * <code>int32 match_qtty = 26;</code>
       * @param value The matchQtty to set.
       * @return This builder for chaining.
       */
      public Builder setMatchQtty(int value) {
        
        matchQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *KL khớp gần của GD khớp lệnh lô chăn
       * </pre>
       *
       * <code>int32 match_qtty = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchQtty() {
        
        matchQtty_ = 0;
        onChanged();
        return this;
      }

      private long openPrice_ ;
      /**
       * <pre>
       *Giá mở cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 open_price = 27;</code>
       * @return The openPrice.
       */
      @java.lang.Override
      public long getOpenPrice() {
        return openPrice_;
      }
      /**
       * <pre>
       *Giá mở cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 open_price = 27;</code>
       * @param value The openPrice to set.
       * @return This builder for chaining.
       */
      public Builder setOpenPrice(long value) {
        
        openPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá mở cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 open_price = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpenPrice() {
        
        openPrice_ = 0L;
        onChanged();
        return this;
      }

      private long priorOpenPrice_ ;
      /**
       * <pre>
       *Giá mở cửa phiên giao dịch trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_open_price = 28;</code>
       * @return The priorOpenPrice.
       */
      @java.lang.Override
      public long getPriorOpenPrice() {
        return priorOpenPrice_;
      }
      /**
       * <pre>
       *Giá mở cửa phiên giao dịch trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_open_price = 28;</code>
       * @param value The priorOpenPrice to set.
       * @return This builder for chaining.
       */
      public Builder setPriorOpenPrice(long value) {
        
        priorOpenPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá mở cửa phiên giao dịch trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_open_price = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriorOpenPrice() {
        
        priorOpenPrice_ = 0L;
        onChanged();
        return this;
      }

      private long closePrice_ ;
      /**
       * <pre>
       *Giá đóng cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 close_price = 29;</code>
       * @return The closePrice.
       */
      @java.lang.Override
      public long getClosePrice() {
        return closePrice_;
      }
      /**
       * <pre>
       *Giá đóng cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 close_price = 29;</code>
       * @param value The closePrice to set.
       * @return This builder for chaining.
       */
      public Builder setClosePrice(long value) {
        
        closePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá đóng cửa ( nghiệp vụ )
       * </pre>
       *
       * <code>int64 close_price = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearClosePrice() {
        
        closePrice_ = 0L;
        onChanged();
        return this;
      }

      private long priorClosePrice_ ;
      /**
       * <pre>
       *Giá đóng cửa phiên trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_close_price = 30;</code>
       * @return The priorClosePrice.
       */
      @java.lang.Override
      public long getPriorClosePrice() {
        return priorClosePrice_;
      }
      /**
       * <pre>
       *Giá đóng cửa phiên trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_close_price = 30;</code>
       * @param value The priorClosePrice to set.
       * @return This builder for chaining.
       */
      public Builder setPriorClosePrice(long value) {
        
        priorClosePrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá đóng cửa phiên trước phiên giao dịch hiện tại
       * </pre>
       *
       * <code>int64 prior_close_price = 30;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriorClosePrice() {
        
        priorClosePrice_ = 0L;
        onChanged();
        return this;
      }

      private double totalVolumeTraded_ ;
      /**
       * <pre>
       *Tổng KL giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_volume_traded = 31;</code>
       * @return The totalVolumeTraded.
       */
      @java.lang.Override
      public double getTotalVolumeTraded() {
        return totalVolumeTraded_;
      }
      /**
       * <pre>
       *Tổng KL giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_volume_traded = 31;</code>
       * @param value The totalVolumeTraded to set.
       * @return This builder for chaining.
       */
      public Builder setTotalVolumeTraded(double value) {
        
        totalVolumeTraded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng KL giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_volume_traded = 31;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalVolumeTraded() {
        
        totalVolumeTraded_ = 0D;
        onChanged();
        return this;
      }

      private double totalValueTraded_ ;
      /**
       * <pre>
       *Tổng giá trị giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_value_traded = 32;</code>
       * @return The totalValueTraded.
       */
      @java.lang.Override
      public double getTotalValueTraded() {
        return totalValueTraded_;
      }
      /**
       * <pre>
       *Tổng giá trị giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_value_traded = 32;</code>
       * @param value The totalValueTraded to set.
       * @return This builder for chaining.
       */
      public Builder setTotalValueTraded(double value) {
        
        totalValueTraded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị giao dịch của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_value_traded = 32;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalValueTraded() {
        
        totalValueTraded_ = 0D;
        onChanged();
        return this;
      }

      private int midPx_ ;
      /**
       * <pre>
       *Giá bình quân ( nghiệp vu)
       * </pre>
       *
       * <code>int32 mid_px = 33;</code>
       * @return The midPx.
       */
      @java.lang.Override
      public int getMidPx() {
        return midPx_;
      }
      /**
       * <pre>
       *Giá bình quân ( nghiệp vu)
       * </pre>
       *
       * <code>int32 mid_px = 33;</code>
       * @param value The midPx to set.
       * @return This builder for chaining.
       */
      public Builder setMidPx(int value) {
        
        midPx_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá bình quân ( nghiệp vu)
       * </pre>
       *
       * <code>int32 mid_px = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearMidPx() {
        
        midPx_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object tradingDate_ = "";
      /**
       * <pre>
       *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string trading_date = 34;</code>
       * @return The tradingDate.
       */
      public java.lang.String getTradingDate() {
        java.lang.Object ref = tradingDate_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tradingDate_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string trading_date = 34;</code>
       * @return The bytes for tradingDate.
       */
      public com.google.protobuf.ByteString
          getTradingDateBytes() {
        java.lang.Object ref = tradingDate_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tradingDate_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string trading_date = 34;</code>
       * @param value The tradingDate to set.
       * @return This builder for chaining.
       */
      public Builder setTradingDate(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tradingDate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string trading_date = 34;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradingDate() {
        
        tradingDate_ = getDefaultInstance().getTradingDate();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Ngày giao dịch hiện tại theo định dạng yyyyMMdd
       * </pre>
       *
       * <code>string trading_date = 34;</code>
       * @param value The bytes for tradingDate to set.
       * @return This builder for chaining.
       */
      public Builder setTradingDateBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tradingDate_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object time_ = "";
      /**
       * <pre>
       *Thời gian theo định dạng HH:mm:ss
       * </pre>
       *
       * <code>string time = 35;</code>
       * @return The time.
       */
      public java.lang.String getTime() {
        java.lang.Object ref = time_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          time_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Thời gian theo định dạng HH:mm:ss
       * </pre>
       *
       * <code>string time = 35;</code>
       * @return The bytes for time.
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        java.lang.Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Thời gian theo định dạng HH:mm:ss
       * </pre>
       *
       * <code>string time = 35;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Thời gian theo định dạng HH:mm:ss
       * </pre>
       *
       * <code>string time = 35;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        
        time_ = getDefaultInstance().getTime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Thời gian theo định dạng HH:mm:ss
       * </pre>
       *
       * <code>string time = 35;</code>
       * @param value The bytes for time to set.
       * @return This builder for chaining.
       */
      public Builder setTimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        time_ = value;
        onChanged();
        return this;
      }

      private int tradingUnit_ ;
      /**
       * <pre>
       *Đơn vị giao dịch nhỏ nhất
       * </pre>
       *
       * <code>int32 trading_unit = 36;</code>
       * @return The tradingUnit.
       */
      @java.lang.Override
      public int getTradingUnit() {
        return tradingUnit_;
      }
      /**
       * <pre>
       *Đơn vị giao dịch nhỏ nhất
       * </pre>
       *
       * <code>int32 trading_unit = 36;</code>
       * @param value The tradingUnit to set.
       * @return This builder for chaining.
       */
      public Builder setTradingUnit(int value) {
        
        tradingUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Đơn vị giao dịch nhỏ nhất
       * </pre>
       *
       * <code>int32 trading_unit = 36;</code>
       * @return This builder for chaining.
       */
      public Builder clearTradingUnit() {
        
        tradingUnit_ = 0;
        onChanged();
        return this;
      }

      private double totalListingQtty_ ;
      /**
       * <pre>
       *Khối lượng niêm yết
       * </pre>
       *
       * <code>double total_listing_qtty = 37;</code>
       * @return The totalListingQtty.
       */
      @java.lang.Override
      public double getTotalListingQtty() {
        return totalListingQtty_;
      }
      /**
       * <pre>
       *Khối lượng niêm yết
       * </pre>
       *
       * <code>double total_listing_qtty = 37;</code>
       * @param value The totalListingQtty to set.
       * @return This builder for chaining.
       */
      public Builder setTotalListingQtty(double value) {
        
        totalListingQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Khối lượng niêm yết
       * </pre>
       *
       * <code>double total_listing_qtty = 37;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalListingQtty() {
        
        totalListingQtty_ = 0D;
        onChanged();
        return this;
      }

      private int dateNo_ ;
      /**
       * <pre>
       *phiên giao dịch thứ ( kể từ ngày niêm yết)
       * </pre>
       *
       * <code>int32 date_no = 38;</code>
       * @return The dateNo.
       */
      @java.lang.Override
      public int getDateNo() {
        return dateNo_;
      }
      /**
       * <pre>
       *phiên giao dịch thứ ( kể từ ngày niêm yết)
       * </pre>
       *
       * <code>int32 date_no = 38;</code>
       * @param value The dateNo to set.
       * @return This builder for chaining.
       */
      public Builder setDateNo(int value) {
        
        dateNo_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *phiên giao dịch thứ ( kể từ ngày niêm yết)
       * </pre>
       *
       * <code>int32 date_no = 38;</code>
       * @return This builder for chaining.
       */
      public Builder clearDateNo() {
        
        dateNo_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object referenceStatus_ = "";
      /**
       * <pre>
       *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
       *0: Không xảy ra
       *1:Trả CT bằng tiền
       *2:Trả cổ tức bằng CP/CP thưởng
       *3: Phát hành CP cho cổ đông hiện hữu
       *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
       *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
       *6: Niêm yết bổ sung
       *7: Giảm vốn
       *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
       *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
       *10: Thay đổi tỷ lệ Free Float
       *11: Họp đại cổ đông
       * </pre>
       *
       * <code>string reference_status = 39;</code>
       * @return The referenceStatus.
       */
      public java.lang.String getReferenceStatus() {
        java.lang.Object ref = referenceStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
       *0: Không xảy ra
       *1:Trả CT bằng tiền
       *2:Trả cổ tức bằng CP/CP thưởng
       *3: Phát hành CP cho cổ đông hiện hữu
       *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
       *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
       *6: Niêm yết bổ sung
       *7: Giảm vốn
       *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
       *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
       *10: Thay đổi tỷ lệ Free Float
       *11: Họp đại cổ đông
       * </pre>
       *
       * <code>string reference_status = 39;</code>
       * @return The bytes for referenceStatus.
       */
      public com.google.protobuf.ByteString
          getReferenceStatusBytes() {
        java.lang.Object ref = referenceStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
       *0: Không xảy ra
       *1:Trả CT bằng tiền
       *2:Trả cổ tức bằng CP/CP thưởng
       *3: Phát hành CP cho cổ đông hiện hữu
       *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
       *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
       *6: Niêm yết bổ sung
       *7: Giảm vốn
       *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
       *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
       *10: Thay đổi tỷ lệ Free Float
       *11: Họp đại cổ đông
       * </pre>
       *
       * <code>string reference_status = 39;</code>
       * @param value The referenceStatus to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
       *0: Không xảy ra
       *1:Trả CT bằng tiền
       *2:Trả cổ tức bằng CP/CP thưởng
       *3: Phát hành CP cho cổ đông hiện hữu
       *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
       *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
       *6: Niêm yết bổ sung
       *7: Giảm vốn
       *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
       *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
       *10: Thay đổi tỷ lệ Free Float
       *11: Họp đại cổ đông
       * </pre>
       *
       * <code>string reference_status = 39;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceStatus() {
        
        referenceStatus_ = getDefaultInstance().getReferenceStatus();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Trạng thái thực hiện quyền ảnh hưởng tới giá chứng khoán:
       *0: Không xảy ra
       *1:Trả CT bằng tiền
       *2:Trả cổ tức bằng CP/CP thưởng
       *3: Phát hành CP cho cổ đông hiện hữu
       *4: Trả cổ tức bằng CP/CP thưởng,phát hành CP cho cổ đông hiện hữu
       *5: Trả cổ tức bằng tiền, bằng CP/CP thưởng, phát hành CP cho cổ đông hiện hữu
       *6: Niêm yết bổ sung
       *7: Giảm vốn
       *8: Trả cổ tức bằng tiền, trả cổ tức bằng CP/CP thưởng
       *9: Trả cổ tức bằng tiền, phát hành CP cho cổ đông hiện hữu
       *10: Thay đổi tỷ lệ Free Float
       *11: Họp đại cổ đông
       * </pre>
       *
       * <code>string reference_status = 39;</code>
       * @param value The bytes for referenceStatus to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceStatus_ = value;
        onChanged();
        return this;
      }

      private long currentPrice_ ;
      /**
       * <pre>
       *Giá khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int64 current_price = 40;</code>
       * @return The currentPrice.
       */
      @java.lang.Override
      public long getCurrentPrice() {
        return currentPrice_;
      }
      /**
       * <pre>
       *Giá khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int64 current_price = 40;</code>
       * @param value The currentPrice to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentPrice(long value) {
        
        currentPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int64 current_price = 40;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentPrice() {
        
        currentPrice_ = 0L;
        onChanged();
        return this;
      }

      private int currentQtty_ ;
      /**
       * <pre>
       *Khối lượng khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 current_qtty = 41;</code>
       * @return The currentQtty.
       */
      @java.lang.Override
      public int getCurrentQtty() {
        return currentQtty_;
      }
      /**
       * <pre>
       *Khối lượng khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 current_qtty = 41;</code>
       * @param value The currentQtty to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentQtty(int value) {
        
        currentQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Khối lượng khớp dự kiến của GD khớp lệnh (lô chẵn)
       * </pre>
       *
       * <code>int32 current_qtty = 41;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentQtty() {
        
        currentQtty_ = 0;
        onChanged();
        return this;
      }

      private long highestPrice_ ;
      /**
       * <pre>
       *Giá thực hiện cao nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 highest_price = 42;</code>
       * @return The highestPrice.
       */
      @java.lang.Override
      public long getHighestPrice() {
        return highestPrice_;
      }
      /**
       * <pre>
       *Giá thực hiện cao nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 highest_price = 42;</code>
       * @param value The highestPrice to set.
       * @return This builder for chaining.
       */
      public Builder setHighestPrice(long value) {
        
        highestPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá thực hiện cao nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 highest_price = 42;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighestPrice() {
        
        highestPrice_ = 0L;
        onChanged();
        return this;
      }

      private long lowestPrice_ ;
      /**
       * <pre>
       *Giá thực hiện thấp nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 lowest_price = 43;</code>
       * @return The lowestPrice.
       */
      @java.lang.Override
      public long getLowestPrice() {
        return lowestPrice_;
      }
      /**
       * <pre>
       *Giá thực hiện thấp nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 lowest_price = 43;</code>
       * @param value The lowestPrice to set.
       * @return This builder for chaining.
       */
      public Builder setLowestPrice(long value) {
        
        lowestPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá thực hiện thấp nhất của GD khớp lệnh   (lô chẵn)
       * </pre>
       *
       * <code>int64 lowest_price = 43;</code>
       * @return This builder for chaining.
       */
      public Builder clearLowestPrice() {
        
        lowestPrice_ = 0L;
        onChanged();
        return this;
      }

      private long priorPrice_ ;
      /**
       * <pre>
       *Gía khớp lệnh của phiên trước đó. Chỉ tính với khớp lệnh thông thường.
       * </pre>
       *
       * <code>int64 prior_price = 44;</code>
       * @return The priorPrice.
       */
      @java.lang.Override
      public long getPriorPrice() {
        return priorPrice_;
      }
      /**
       * <pre>
       *Gía khớp lệnh của phiên trước đó. Chỉ tính với khớp lệnh thông thường.
       * </pre>
       *
       * <code>int64 prior_price = 44;</code>
       * @param value The priorPrice to set.
       * @return This builder for chaining.
       */
      public Builder setPriorPrice(long value) {
        
        priorPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Gía khớp lệnh của phiên trước đó. Chỉ tính với khớp lệnh thông thường.
       * </pre>
       *
       * <code>int64 prior_price = 44;</code>
       * @return This builder for chaining.
       */
      public Builder clearPriorPrice() {
        
        priorPrice_ = 0L;
        onChanged();
        return this;
      }

      private double matchValue_ ;
      /**
       * <pre>
       *Giá trị khớp lệnh gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double match_value = 45;</code>
       * @return The matchValue.
       */
      @java.lang.Override
      public double getMatchValue() {
        return matchValue_;
      }
      /**
       * <pre>
       *Giá trị khớp lệnh gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double match_value = 45;</code>
       * @param value The matchValue to set.
       * @return This builder for chaining.
       */
      public Builder setMatchValue(double value) {
        
        matchValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá trị khớp lệnh gần nhất của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double match_value = 45;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchValue() {
        
        matchValue_ = 0D;
        onChanged();
        return this;
      }

      private int offerCount_ ;
      /**
       * <pre>
       *Tổng số lệnh đặt bán của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 offer_count = 46;</code>
       * @return The offerCount.
       */
      @java.lang.Override
      public int getOfferCount() {
        return offerCount_;
      }
      /**
       * <pre>
       *Tổng số lệnh đặt bán của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 offer_count = 46;</code>
       * @param value The offerCount to set.
       * @return This builder for chaining.
       */
      public Builder setOfferCount(int value) {
        
        offerCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng số lệnh đặt bán của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 offer_count = 46;</code>
       * @return This builder for chaining.
       */
      public Builder clearOfferCount() {
        
        offerCount_ = 0;
        onChanged();
        return this;
      }

      private int bidCount_ ;
      /**
       * <pre>
       *Tổng số lệnh đặt mua của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 bid_count = 47;</code>
       * @return The bidCount.
       */
      @java.lang.Override
      public int getBidCount() {
        return bidCount_;
      }
      /**
       * <pre>
       *Tổng số lệnh đặt mua của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 bid_count = 47;</code>
       * @param value The bidCount to set.
       * @return This builder for chaining.
       */
      public Builder setBidCount(int value) {
        
        bidCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng số lệnh đặt mua của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>int32 bid_count = 47;</code>
       * @return This builder for chaining.
       */
      public Builder clearBidCount() {
        
        bidCount_ = 0;
        onChanged();
        return this;
      }

      private double nmTotalTradedQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_qtty = 48;</code>
       * @return The nmTotalTradedQtty.
       */
      @java.lang.Override
      public double getNmTotalTradedQtty() {
        return nmTotalTradedQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_qtty = 48;</code>
       * @param value The nmTotalTradedQtty to set.
       * @return This builder for chaining.
       */
      public Builder setNmTotalTradedQtty(double value) {
        
        nmTotalTradedQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_qtty = 48;</code>
       * @return This builder for chaining.
       */
      public Builder clearNmTotalTradedQtty() {
        
        nmTotalTradedQtty_ = 0D;
        onChanged();
        return this;
      }

      private double nmTotalTradedValue_ ;
      /**
       * <pre>
       *Tổng giá trị giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_value = 49;</code>
       * @return The nmTotalTradedValue.
       */
      @java.lang.Override
      public double getNmTotalTradedValue() {
        return nmTotalTradedValue_;
      }
      /**
       * <pre>
       *Tổng giá trị giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_value = 49;</code>
       * @param value The nmTotalTradedValue to set.
       * @return This builder for chaining.
       */
      public Builder setNmTotalTradedValue(double value) {
        
        nmTotalTradedValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị giao dịch thông thường của GD khớp lệnh lô chẵn
       * </pre>
       *
       * <code>double nm_total_traded_value = 49;</code>
       * @return This builder for chaining.
       */
      public Builder clearNmTotalTradedValue() {
        
        nmTotalTradedValue_ = 0D;
        onChanged();
        return this;
      }

      private double ptMatchQtty_ ;
      /**
       * <pre>
       *Khối lượng thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_match_qtty = 50;</code>
       * @return The ptMatchQtty.
       */
      @java.lang.Override
      public double getPtMatchQtty() {
        return ptMatchQtty_;
      }
      /**
       * <pre>
       *Khối lượng thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_match_qtty = 50;</code>
       * @param value The ptMatchQtty to set.
       * @return This builder for chaining.
       */
      public Builder setPtMatchQtty(double value) {
        
        ptMatchQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Khối lượng thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_match_qtty = 50;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtMatchQtty() {
        
        ptMatchQtty_ = 0D;
        onChanged();
        return this;
      }

      private long ptMatchPrice_ ;
      /**
       * <pre>
       *Giá thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int64 pt_match_price = 51;</code>
       * @return The ptMatchPrice.
       */
      @java.lang.Override
      public long getPtMatchPrice() {
        return ptMatchPrice_;
      }
      /**
       * <pre>
       *Giá thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int64 pt_match_price = 51;</code>
       * @param value The ptMatchPrice to set.
       * @return This builder for chaining.
       */
      public Builder setPtMatchPrice(long value) {
        
        ptMatchPrice_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Giá thực hiện gần nhất của giao dịch thỏa thuận  (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int64 pt_match_price = 51;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtMatchPrice() {
        
        ptMatchPrice_ = 0L;
        onChanged();
        return this;
      }

      private double ptTotalTradedQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_qtty = 52;</code>
       * @return The ptTotalTradedQtty.
       */
      @java.lang.Override
      public double getPtTotalTradedQtty() {
        return ptTotalTradedQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_qtty = 52;</code>
       * @param value The ptTotalTradedQtty to set.
       * @return This builder for chaining.
       */
      public Builder setPtTotalTradedQtty(double value) {
        
        ptTotalTradedQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_qtty = 52;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtTotalTradedQtty() {
        
        ptTotalTradedQtty_ = 0D;
        onChanged();
        return this;
      }

      private double ptTotalTradedValue_ ;
      /**
       * <pre>
       *Tổng giá trị của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_value = 53;</code>
       * @return The ptTotalTradedValue.
       */
      @java.lang.Override
      public double getPtTotalTradedValue() {
        return ptTotalTradedValue_;
      }
      /**
       * <pre>
       *Tổng giá trị của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_value = 53;</code>
       * @param value The ptTotalTradedValue to set.
       * @return This builder for chaining.
       */
      public Builder setPtTotalTradedValue(double value) {
        
        ptTotalTradedValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị của giao dịch thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double pt_total_traded_value = 53;</code>
       * @return This builder for chaining.
       */
      public Builder clearPtTotalTradedValue() {
        
        ptTotalTradedValue_ = 0D;
        onChanged();
        return this;
      }

      private double totalBuyTradingQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_qtty = 54;</code>
       * @return The totalBuyTradingQtty.
       */
      @java.lang.Override
      public double getTotalBuyTradingQtty() {
        return totalBuyTradingQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_qtty = 54;</code>
       * @param value The totalBuyTradingQtty to set.
       * @return This builder for chaining.
       */
      public Builder setTotalBuyTradingQtty(double value) {
        
        totalBuyTradingQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_qtty = 54;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalBuyTradingQtty() {
        
        totalBuyTradingQtty_ = 0D;
        onChanged();
        return this;
      }

      private int buyCount_ ;
      /**
       * <pre>
       *Tổng số lệnh mua khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 buy_count = 55;</code>
       * @return The buyCount.
       */
      @java.lang.Override
      public int getBuyCount() {
        return buyCount_;
      }
      /**
       * <pre>
       *Tổng số lệnh mua khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 buy_count = 55;</code>
       * @param value The buyCount to set.
       * @return This builder for chaining.
       */
      public Builder setBuyCount(int value) {
        
        buyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng số lệnh mua khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 buy_count = 55;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuyCount() {
        
        buyCount_ = 0;
        onChanged();
        return this;
      }

      private double totalBuyTradingValue_ ;
      /**
       * <pre>
       *Tổng giá trị mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_value = 56;</code>
       * @return The totalBuyTradingValue.
       */
      @java.lang.Override
      public double getTotalBuyTradingValue() {
        return totalBuyTradingValue_;
      }
      /**
       * <pre>
       *Tổng giá trị mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_value = 56;</code>
       * @param value The totalBuyTradingValue to set.
       * @return This builder for chaining.
       */
      public Builder setTotalBuyTradingValue(double value) {
        
        totalBuyTradingValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị mua khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_buy_trading_value = 56;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalBuyTradingValue() {
        
        totalBuyTradingValue_ = 0D;
        onChanged();
        return this;
      }

      private double totalSellTradingQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_qtty = 57;</code>
       * @return The totalSellTradingQtty.
       */
      @java.lang.Override
      public double getTotalSellTradingQtty() {
        return totalSellTradingQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_qtty = 57;</code>
       * @param value The totalSellTradingQtty to set.
       * @return This builder for chaining.
       */
      public Builder setTotalSellTradingQtty(double value) {
        
        totalSellTradingQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_qtty = 57;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalSellTradingQtty() {
        
        totalSellTradingQtty_ = 0D;
        onChanged();
        return this;
      }

      private int sellCount_ ;
      /**
       * <pre>
       *Tổng số lệnh bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 sell_count = 58;</code>
       * @return The sellCount.
       */
      @java.lang.Override
      public int getSellCount() {
        return sellCount_;
      }
      /**
       * <pre>
       *Tổng số lệnh bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 sell_count = 58;</code>
       * @param value The sellCount to set.
       * @return This builder for chaining.
       */
      public Builder setSellCount(int value) {
        
        sellCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng số lệnh bán khớp của GD khớp lệnh và thỏa thuân (lô chẵn và lẻ)
       * </pre>
       *
       * <code>int32 sell_count = 58;</code>
       * @return This builder for chaining.
       */
      public Builder clearSellCount() {
        
        sellCount_ = 0;
        onChanged();
        return this;
      }

      private double totalSellTradingValue_ ;
      /**
       * <pre>
       *Tổng giá trị bán khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_value = 59;</code>
       * @return The totalSellTradingValue.
       */
      @java.lang.Override
      public double getTotalSellTradingValue() {
        return totalSellTradingValue_;
      }
      /**
       * <pre>
       *Tổng giá trị bán khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_value = 59;</code>
       * @param value The totalSellTradingValue to set.
       * @return This builder for chaining.
       */
      public Builder setTotalSellTradingValue(double value) {
        
        totalSellTradingValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị bán khớp của GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double total_sell_trading_value = 59;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalSellTradingValue() {
        
        totalSellTradingValue_ = 0D;
        onChanged();
        return this;
      }

      private double buyForeignQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng mua khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_qtty = 60;</code>
       * @return The buyForeignQtty.
       */
      @java.lang.Override
      public double getBuyForeignQtty() {
        return buyForeignQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng mua khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_qtty = 60;</code>
       * @param value The buyForeignQtty to set.
       * @return This builder for chaining.
       */
      public Builder setBuyForeignQtty(double value) {
        
        buyForeignQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng mua khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_qtty = 60;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuyForeignQtty() {
        
        buyForeignQtty_ = 0D;
        onChanged();
        return this;
      }

      private double buyForeignValue_ ;
      /**
       * <pre>
       *Tổng giá trị mua khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_value = 61;</code>
       * @return The buyForeignValue.
       */
      @java.lang.Override
      public double getBuyForeignValue() {
        return buyForeignValue_;
      }
      /**
       * <pre>
       *Tổng giá trị mua khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_value = 61;</code>
       * @param value The buyForeignValue to set.
       * @return This builder for chaining.
       */
      public Builder setBuyForeignValue(double value) {
        
        buyForeignValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị mua khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double buy_foreign_value = 61;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuyForeignValue() {
        
        buyForeignValue_ = 0D;
        onChanged();
        return this;
      }

      private double sellForeignQtty_ ;
      /**
       * <pre>
       *Tổng khối lượng bán khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_qtty = 62;</code>
       * @return The sellForeignQtty.
       */
      @java.lang.Override
      public double getSellForeignQtty() {
        return sellForeignQtty_;
      }
      /**
       * <pre>
       *Tổng khối lượng bán khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_qtty = 62;</code>
       * @param value The sellForeignQtty to set.
       * @return This builder for chaining.
       */
      public Builder setSellForeignQtty(double value) {
        
        sellForeignQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng khối lượng bán khớp của NĐT NN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_qtty = 62;</code>
       * @return This builder for chaining.
       */
      public Builder clearSellForeignQtty() {
        
        sellForeignQtty_ = 0D;
        onChanged();
        return this;
      }

      private double sellForeignValue_ ;
      /**
       * <pre>
       *Tổng giá trị bán khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_value = 63;</code>
       * @return The sellForeignValue.
       */
      @java.lang.Override
      public double getSellForeignValue() {
        return sellForeignValue_;
      }
      /**
       * <pre>
       *Tổng giá trị bán khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_value = 63;</code>
       * @param value The sellForeignValue to set.
       * @return This builder for chaining.
       */
      public Builder setSellForeignValue(double value) {
        
        sellForeignValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng giá trị bán khớp của NĐTNN. Áp dụng cho GD khớp lệnh và thỏa thuận (lô chẵn và lẻ)
       * </pre>
       *
       * <code>double sell_foreign_value = 63;</code>
       * @return This builder for chaining.
       */
      public Builder clearSellForeignValue() {
        
        sellForeignValue_ = 0D;
        onChanged();
        return this;
      }

      private int remainForeignQtty_ ;
      /**
       * <pre>
       *Số lượng còn lại cho phép NDTNN đặt lệnh mua
       * </pre>
       *
       * <code>int32 remain_foreign_qtty = 64;</code>
       * @return The remainForeignQtty.
       */
      @java.lang.Override
      public int getRemainForeignQtty() {
        return remainForeignQtty_;
      }
      /**
       * <pre>
       *Số lượng còn lại cho phép NDTNN đặt lệnh mua
       * </pre>
       *
       * <code>int32 remain_foreign_qtty = 64;</code>
       * @param value The remainForeignQtty to set.
       * @return This builder for chaining.
       */
      public Builder setRemainForeignQtty(int value) {
        
        remainForeignQtty_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Số lượng còn lại cho phép NDTNN đặt lệnh mua
       * </pre>
       *
       * <code>int32 remain_foreign_qtty = 64;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemainForeignQtty() {
        
        remainForeignQtty_ = 0;
        onChanged();
        return this;
      }

      private double totalBidQttyOd_ ;
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô lẻ (trừ sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty_od = 65;</code>
       * @return The totalBidQttyOd.
       */
      @java.lang.Override
      public double getTotalBidQttyOd() {
        return totalBidQttyOd_;
      }
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô lẻ (trừ sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty_od = 65;</code>
       * @param value The totalBidQttyOd to set.
       * @return This builder for chaining.
       */
      public Builder setTotalBidQttyOd(double value) {
        
        totalBidQttyOd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng KL đặt mua của GD khớp lệnh lô lẻ (trừ sửa, hủy)
       * </pre>
       *
       * <code>double total_bid_qtty_od = 65;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalBidQttyOd() {
        
        totalBidQttyOd_ = 0D;
        onChanged();
        return this;
      }

      private double totalOfferQttyOd_ ;
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô lẻ (trừ sửa hủy)&#92;
       * </pre>
       *
       * <code>double total_offer_qtty_od = 66;</code>
       * @return The totalOfferQttyOd.
       */
      @java.lang.Override
      public double getTotalOfferQttyOd() {
        return totalOfferQttyOd_;
      }
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô lẻ (trừ sửa hủy)&#92;
       * </pre>
       *
       * <code>double total_offer_qtty_od = 66;</code>
       * @param value The totalOfferQttyOd to set.
       * @return This builder for chaining.
       */
      public Builder setTotalOfferQttyOd(double value) {
        
        totalOfferQttyOd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *Tổng KL đặt bán của GD khớp lệnh lô lẻ (trừ sửa hủy)&#92;
       * </pre>
       *
       * <code>double total_offer_qtty_od = 66;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalOfferQttyOd() {
        
        totalOfferQttyOd_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:StockInfo)
    }

    // @@protoc_insertion_point(class_scope:StockInfo)
    private static final com.example.proto.ReadData.StockInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.example.proto.ReadData.StockInfo();
    }

    public static com.example.proto.ReadData.StockInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StockInfo>
        PARSER = new com.google.protobuf.AbstractParser<StockInfo>() {
      @java.lang.Override
      public StockInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StockInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StockInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StockInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.example.proto.ReadData.StockInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_StockInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_StockInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017read_data.proto\032\033google/protobuf/empty" +
      ".proto\"\306\014\n\tStockInfo\022\026\n\016sender_comp_id\030\001" +
      " \001(\t\022\016\n\006symbol\030\002 \001(\t\022\021\n\tsymbol_id\030\003 \001(\001\022" +
      "\022\n\nboard_code\030\004 \001(\t\022\032\n\022trading_session_i" +
      "d\030\005 \001(\t\022\027\n\017trad_ses_status\030\006 \001(\t\022\037\n\027secu" +
      "rity_trading_status\030\007 \001(\005\022\026\n\016listing_sta" +
      "tus\030\010 \001(\005\022\025\n\rsecurity_type\030\t \001(\t\022\022\n\nissu" +
      "e_date\030\n \001(\t\022\016\n\006issuer\030\013 \001(\t\022\025\n\rsecurity" +
      "_desc\030\014 \001(\t\022\026\n\016best_bid_price\030\r \001(\005\022\025\n\rb" +
      "est_bid_qtty\030\016 \001(\005\022\030\n\020best_offer_price\030\017" +
      " \001(\005\022\027\n\017best_offer_qtty\030\020 \001(\005\022\026\n\016total_b" +
      "id_qtty\030\021 \001(\001\022\030\n\020total_offer_qtty\030\022 \001(\001\022" +
      "\023\n\013basic_price\030\023 \001(\003\022\023\n\013floor_price\030\024 \001(" +
      "\003\022\025\n\rceiling_price\030\025 \001(\003\022\026\n\016floor_price_" +
      "pt\030\026 \001(\003\022\030\n\020ceiling_price_pt\030\027 \001(\003\022\021\n\tpa" +
      "r_value\030\030 \001(\005\022\023\n\013match_price\030\031 \001(\003\022\022\n\nma" +
      "tch_qtty\030\032 \001(\005\022\022\n\nopen_price\030\033 \001(\003\022\030\n\020pr" +
      "ior_open_price\030\034 \001(\003\022\023\n\013close_price\030\035 \001(" +
      "\003\022\031\n\021prior_close_price\030\036 \001(\003\022\033\n\023total_vo" +
      "lume_traded\030\037 \001(\001\022\032\n\022total_value_traded\030" +
      "  \001(\001\022\016\n\006mid_px\030! \001(\005\022\024\n\014trading_date\030\" " +
      "\001(\t\022\014\n\004time\030# \001(\t\022\024\n\014trading_unit\030$ \001(\005\022" +
      "\032\n\022total_listing_qtty\030% \001(\001\022\017\n\007date_no\030&" +
      " \001(\005\022\030\n\020reference_status\030\' \001(\t\022\025\n\rcurren" +
      "t_price\030( \001(\003\022\024\n\014current_qtty\030) \001(\005\022\025\n\rh" +
      "ighest_price\030* \001(\003\022\024\n\014lowest_price\030+ \001(\003" +
      "\022\023\n\013prior_price\030, \001(\003\022\023\n\013match_value\030- \001" +
      "(\001\022\023\n\013offer_count\030. \001(\005\022\021\n\tbid_count\030/ \001" +
      "(\005\022\034\n\024nm_total_traded_qtty\0300 \001(\001\022\035\n\025nm_t" +
      "otal_traded_value\0301 \001(\001\022\025\n\rpt_match_qtty" +
      "\0302 \001(\001\022\026\n\016pt_match_price\0303 \001(\003\022\034\n\024pt_tot" +
      "al_traded_qtty\0304 \001(\001\022\035\n\025pt_total_traded_" +
      "value\0305 \001(\001\022\036\n\026total_buy_trading_qtty\0306 " +
      "\001(\001\022\021\n\tbuy_count\0307 \001(\005\022\037\n\027total_buy_trad" +
      "ing_value\0308 \001(\001\022\037\n\027total_sell_trading_qt" +
      "ty\0309 \001(\001\022\022\n\nsell_count\030: \001(\005\022 \n\030total_se" +
      "ll_trading_value\030; \001(\001\022\030\n\020buy_foreign_qt" +
      "ty\030< \001(\001\022\031\n\021buy_foreign_value\030= \001(\001\022\031\n\021s" +
      "ell_foreign_qtty\030> \001(\001\022\032\n\022sell_foreign_v" +
      "alue\030? \001(\001\022\033\n\023remain_foreign_qtty\030@ \001(\005\022" +
      "\031\n\021total_bid_qtty_od\030A \001(\001\022\033\n\023total_offe" +
      "r_qtty_od\030B \001(\001B\023\n\021com.example.protob\006pr" +
      "oto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_StockInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_StockInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_StockInfo_descriptor,
        new java.lang.String[] { "SenderCompId", "Symbol", "SymbolId", "BoardCode", "TradingSessionId", "TradSesStatus", "SecurityTradingStatus", "ListingStatus", "SecurityType", "IssueDate", "Issuer", "SecurityDesc", "BestBidPrice", "BestBidQtty", "BestOfferPrice", "BestOfferQtty", "TotalBidQtty", "TotalOfferQtty", "BasicPrice", "FloorPrice", "CeilingPrice", "FloorPricePt", "CeilingPricePt", "ParValue", "MatchPrice", "MatchQtty", "OpenPrice", "PriorOpenPrice", "ClosePrice", "PriorClosePrice", "TotalVolumeTraded", "TotalValueTraded", "MidPx", "TradingDate", "Time", "TradingUnit", "TotalListingQtty", "DateNo", "ReferenceStatus", "CurrentPrice", "CurrentQtty", "HighestPrice", "LowestPrice", "PriorPrice", "MatchValue", "OfferCount", "BidCount", "NmTotalTradedQtty", "NmTotalTradedValue", "PtMatchQtty", "PtMatchPrice", "PtTotalTradedQtty", "PtTotalTradedValue", "TotalBuyTradingQtty", "BuyCount", "TotalBuyTradingValue", "TotalSellTradingQtty", "SellCount", "TotalSellTradingValue", "BuyForeignQtty", "BuyForeignValue", "SellForeignQtty", "SellForeignValue", "RemainForeignQtty", "TotalBidQttyOd", "TotalOfferQttyOd", });
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
